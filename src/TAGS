
backend/access/itup.h,89
#define ITUP_HITUP_H2,15
#define MaxIndexAttributeNumber MaxIndexAttributeNumber4,31

backend/access/skey.h,407
#define SKEY_HSKEY_H2,15
typedef struct ScanKeyData {ScanKeyData6,80
  bits16       sk_flags;sk_flags7,109
  AttrNumber   sk_attno;sk_attno8,134
  RegProcedure sk_procedure;sk_procedure9,159
  func_ptr     sk_func;sk_func10,188
  int32        sk_nargs;sk_nargs11,212
  Datum        sk_argument;sk_argument12,237
} ScanKeyData;ScanKeyData13,265
typedef ScanKeyData* ScanKey;ScanKey15,281

backend/access/relscan.h,824
#define RELSCAN_HRELSCAN_H2,18
typedef struct HeapScanDescData {HeapScanDescData9,136
  Relation        rs_rd;rs_rd10,170
  HeapTuple       rs_ptup;rs_ptup11,195
  HeapTuple       rs_ctup;rs_ctup12,222
  HeapTuple       rs_ntup;rs_ntup13,249
  Buffer          rs_pbuf;rs_pbuf14,276
  Buffer          rs_cbuf;rs_cbuf15,303
  Buffer          rs_nbuf;rs_nbuf16,330
  ItemPointerData rs_mctid;rs_mctid17,357
  ItemPointerData rs_mntid;rs_mntid18,385
  ItemPointerData rs_mcd;rs_mcd19,413
  bool            rs_atend;rs_atend20,439
  TimeQual        rs_tr;rs_tr21,467
  uint16          rs_cdelta;rs_cdelta22,492
  uint16          rs_nkeys;rs_nkeys23,521
  ScanKey         rs_key;rs_key24,549
} HeapScanDescData;HeapScanDescData25,575
typedef HeapScanDescData *HeapScanDesc;HeapScanDesc27,596

backend/access/transam/xid.c,160
TransactionIdStore(TransactionId transactionId,TransactionIdStore6,69
StoreInvalidTransactionId(TransactionId *destination){StoreInvalidTransactionId13,206

backend/access/transam/xact.c,587
TransactionId DisabledTransactionId = (TransactionId)-1;DisabledTransactionId4,48
bool          AMI_OVERRIDE = false;AMI_OVERRIDE5,105
TransactionStateData CurrentTransactionStateData = {CurrentTransactionStateData8,143
TransactionState CurrentTransactionState = &CurrentTransactionStateData;CurrentTransactionState15,263
StartTransactionCommand()StartTransactionCommand18,342
StartTransaction()StartTransaction29,503
AtStart_Cache(){AtStart_Cache54,931
CommitTransactionCommand(){CommitTransactionCommand59,976
GetCurrentTransactionId(){GetCurrentTransactionId64,1022

backend/access/transam/varsup.c,550
static int prefetched_oid_count = 0;prefetched_oid_count8,152
static Oid next_prefetched_oid;next_prefetched_oid9,189
#define VAR_OID_PREFETCH VAR_OID_PREFETCH10,221
int OidGenLockId;OidGenLockId11,249
GetNewTransactionId(TransactionId *xid)GetNewTransactionId14,273
GetNewObjectId(Oid *oid_return){GetNewObjectId25,431
GetNewObjectIdBlock(Oid *oid_return,GetNewObjectIdBlock42,888
VariableRelationGetNextOid(Oid *oid_return){VariableRelationGetNextOid56,1219
VariableRelationPutNextOid(Oid *oidP){VariableRelationPutNextOid82,1874

backend/access/transam/transam.c,220
TransactionId NullTransactionId = (TransactionId) 0;NullTransactionId5,74
TransactionId AmiTransactionId  = (TransactionId)512;AmiTransactionId6,127
Relation VariableRelation = (Relation)NULL;VariableRelation8,182

backend/access/common/heaptuple.c,45
heap_getattr(HeapTuple tup,heap_getattr2,7

backend/access/common/tupdesc.c,210
CreateTupleDesc(int natts, AttributeTupleForm *attrs){CreateTupleDesc5,61
CreateTupleDescCopy(TupleDesc tupdesc){CreateTupleDescCopy18,299
CreateTemplateTupleDesc(int natts){CreateTemplateTupleDesc35,785

backend/access/common/scankey.c,71
ScanKeyEntryInitialize(ScanKey      entry,ScanKeyEntryInitialize6,80

backend/access/index/istrat.c,199
IndexSupportInitialize(IndexStrategy  indexStrategy,IndexSupportInitialize18,409
AttributeNumberGetIndexStrategySize(AttrNumber     maxAttributeNumber,AttributeNumberGetIndexStrategySize156,5445

backend/access/htup.h,1013
#define HTOP_HHTOP_H2,15
#define ObjectIdAttributeNumber ObjectIdAttributeNumber6,88
#define MinHeapTupleBitmapSize MinHeapTupleBitmapSize8,127
typedef struct HeapTupleData {HeapTupleData10,162
  unsigned int    t_len;t_len11,193
  ItemPointerData t_ctid;t_ctid12,218
  ItemPointerData t_chain;t_chain13,244
  Oid             t_oid;t_oid15,272
  CommandId       t_cmin;t_cmin17,298
  CommandId       t_cmax;t_cmax18,324
  TransactionId   t_xmin;t_xmin20,351
  TransactionId   t_xmax;t_xmax21,377
  AbsoluteTime    t_tmin;t_tmin23,404
  AbsoluteTime    t_tmax;t_tmax24,430
  int16           t_natts;t_natts26,457
  char            t_vtype;t_vtype27,484
  char            t_infomask;t_infomask29,512
  uint8           t_hoff;t_hoff31,543
  bits8           t_bits[MinHeapTupleBitmapSize/8];t_bits32,569
} HeapTupleData;HeapTupleData33,621
typedef HeapTupleData *HeapTuple;HeapTuple35,639
#define GETSTRUCT(GETSTRUCT37,674
#define HeapTupleIsValid(HeapTupleIsValid39,744

backend/access/xact.h,672
#define XACT_HXACT_H2,15
typedef struct TransactionStateData{TransactionStateData6,82
  TransactionId  transactionIdData;transactionIdData7,119
  CommandId      commandId;commandId8,155
  AbsoluteTime   startTime;startTime9,183
  int            state;state10,211
  int            blockState;blockState11,235
} TransactionStateData;TransactionStateData12,264
#define TRANS_DEFAULT TRANS_DEFAULT14,289
#define TRANS_START TRANS_START15,316
#define TRANS_INPROGRESS TRANS_INPROGRESS16,343
#define TRANS_DISABLED TRANS_DISABLED17,370
#define TBLOCK_DEFAULT TBLOCK_DEFAULT19,398
typedef TransactionStateData *TransactionState;TransactionState21,424

backend/access/attnum.h,73
#define ATTNUM_HATTNUM_H2,17
typedef int16 AttrNumber;AttrNumber5,50

backend/access/istrat.h,33
#define ISTRATE_HISTRATE_H2,18

backend/access/tupdesc.h,186
#define TUPDESC_HTUPDESC_H2,18
typedef struct tupleDesc {tupleDesc5,97
  int                natts;natts6,124
  AttributeTupleForm *attrs;attrs7,152
} *TupleDesc;TupleDesc8,181

backend/access/funcindex.h,275
#define FUNCINDEX_HFUNCINDEX_H2,20
  int      nargs;nargs6,80
  Oid      arglist[8];arglist7,98
  Oid      procOid;procOid8,121
  NameData funcName;funcName9,141
} FuncIndexInfo;FuncIndexInfo10,162
typedef FuncIndexInfo *FuncIndexInfoPtr;FuncIndexInfoPtr12,180

backend/access/transam.h,530
#define TRANSAM_HTRANSAM_H2,18
#define BootstrapObjectIdData BootstrapObjectIdData4,37
typedef struct VariableRelationContentsData {VariableRelationContentsData5,73
  int           TransSystemVersion;TransSystemVersion6,119
  TransactionId nextXidData;nextXidData7,155
  TransactionId lastXidData;lastXidData8,184
  Oid           nextOid;nextOid9,213
} VariableRelationContentsData;VariableRelationContentsData10,238
typedef VariableRelationContentsData * VariableRelationContents;VariableRelationContents12,271

backend/access/heapam.h,2646
#define HEAPAM_HHEAPAM_H2,17
typedef struct HeapAccessStatisticsData{HeapAccessStatisticsData8,136
  time_t init_global_timestamp;init_global_timestamp9,177
  time_t local_reset_timestamp;local_reset_timestamp10,209
  time_t last_request_timestamp;last_request_timestamp11,241
  int global_open;global_open13,275
  int global_openr;global_openr14,294
  int global_close;global_close15,314
  int global_beginscan;global_beginscan16,334
  int global_rescan;global_rescan17,358
  int global_endscan;global_endscan18,379
  int global_getnext;global_getnext19,401
  int global_fetch;global_fetch20,423
  int global_insert;global_insert21,443
  int global_delete;global_delete22,464
  int global_replace;global_replace23,485
  int global_markpos;global_markpos24,507
  int global_restrpos;global_restrpos25,529
  int global_BufferGetRelation;global_BufferGetRelation26,552
  int global_RelationIdGetRelation;global_RelationIdGetRelation27,584
  int global_RelationIdGetRelation_Buf;global_RelationIdGetRelation_Buf28,620
  int global_RelationNameGetRelation;global_RelationNameGetRelation29,660
  int global_getreldesc;global_getreldesc30,698
  int global_heapgettup;global_heapgettup31,723
  int global_RelationPutHeapTuple;global_RelationPutHeapTuple32,748
  int global_RelationPutLongHeapTuple;global_RelationPutLongHeapTuple33,783
  int local_open;local_open34,822
  int local_openr;local_openr35,840
  int local_close;local_close36,859
  int local_beginscan;local_beginscan37,878
  int local_rescan;local_rescan38,901
  int local_endscan;local_endscan39,921
  int local_getnext;local_getnext40,942
  int local_fetch;local_fetch41,963
  int local_insert;local_insert42,982
  int local_delete;local_delete43,1002
  int local_replace;local_replace44,1022
  int local_markpos;local_markpos45,1043
  int local_restrpos;local_restrpos46,1064
  int local_BufferGetRelation;local_BufferGetRelation47,1086
  int local_RelationIdGetRelation;local_RelationIdGetRelation48,1117
  int local_RelationIdGetRelation_Buf;local_RelationIdGetRelation_Buf49,1152
  int local_RelationNameGetRelation;local_RelationNameGetRelation50,1191
  int local_getreldesc;local_getreldesc51,1228
  int local_heapgettup;local_heapgettup52,1252
  int local_RelationPutHeapTuple;local_RelationPutHeapTuple53,1276
  int local_RelationPutLongHeapTuple;local_RelationPutLongHeapTuple54,1310
} HeapAccessStatisticsData;HeapAccessStatisticsData55,1348
typedef HeapAccessStatisticsData *HeapAccessStatistics;HeapAccessStatistics57,1377
#define IncrHeapAccessStat(IncrHeapAccessStat60,1481

backend/access/heap/stats.c,92
HeapAccessStatistics heap_access_stats = (HeapAccessStatistics)NULL;heap_access_stats4,51

backend/access/heap/heapam.c,540
#define HEAPDEBUG_1HEAPDEBUG_111,228
#define HEAPDEBUG_2HEAPDEBUG_212,248
#define HEAPDEBUG_3HEAPDEBUG_313,268
#define HEAPDEBUG_4HEAPDEBUG_414,288
#define HEAPDEBUG_5HEAPDEBUG_515,308
#define HEAPDEBUG_6HEAPDEBUG_616,328
#define HEAPDEBUG_7HEAPDEBUG_717,348
heap_openr(char *relationName){heap_openr21,379
heap_close(Relation relation){heap_close35,700
heap_endscan(HeapScanDesc sdesc){heap_endscan43,845
heap_beginscan(Relation relation,heap_beginscan58,1176
heap_getnext(HeapScanDesc scandesc,heap_getnext97,2171

backend/access/heap/tqual.c,140
static TimeQualData SelfTimeQualData;SelfTimeQualData1,0
TimeQual            SelfTimeQual = (Pointer)&SelfTimeQualData;SelfTimeQual2,38

backend/access/strat.h,511
#define STRAT_HSTRAT_H2,16
typedef struct StrategyMapData {StrategyMapData6,80
  ScanKeyData entry[1];entry7,113
} StrategyMapData;StrategyMapData8,137
typedef StrategyMapData *StrategyMap;StrategyMap10,157
typedef struct IndexStrategyData {IndexStrategyData12,196
  StrategyMapData strategyMapData[1];strategyMapData13,231
} IndexStrategyData;IndexStrategyData14,269
typedef uint16            StrategyNumber;StrategyNumber16,291
typedef IndexStrategyData *IndexStrategy;IndexStrategy18,334

backend/access/sdir.h,288
#define SDIR_HSDIR_H2,15
typedef enum ScanDirection {ScanDirection4,31
  BackwardScanDirection   = -1,BackwardScanDirection5,60
  NoMovementScanDirection = 0,NoMovementScanDirection6,92
  ForwardScanDirection    = 1ForwardScanDirection7,123
} ScanDirection;ScanDirection8,153

backend/obj/bootstrap_token.h,1007
# define YYTOKENTYPEYYTOKENTYPE36,1566
   enum yytokentype {yytokentype39,1690
     ID = 258,ID40,1712
     OPEN = 259,OPEN41,1727
     XCLOSE = 260,XCLOSE42,1744
     XCREATE = 261,XCREATE43,1763
     COMMA = 262,COMMA44,1783
     EQUALS = 263,EQUALS45,1801
     LPAREN = 264,LPAREN46,1820
     RPAREN = 265,RPAREN47,1839
     XBOOTSTRAP = 266,XBOOTSTRAP48,1858
     low = 267,low49,1881
     high = 268high50,1897
#define ID ID54,1941
#define OPEN OPEN55,1956
#define XCLOSE XCLOSE56,1973
#define XCREATE XCREATE57,1992
#define COMMA COMMA58,2012
#define EQUALS EQUALS59,2030
#define LPAREN LPAREN60,2049
#define RPAREN RPAREN61,2068
#define XBOOTSTRAP XBOOTSTRAP62,2087
#define low low63,2110
#define high high64,2126
typedef union YYSTYPEYYSTYPE70,2202
  int ival;ival76,2335
} YYSTYPE;YYSTYPE82,2396
# define YYSTYPE_IS_TRIVIAL YYSTYPE_IS_TRIVIAL83,2407
# define yystype yystype84,2437
# define YYSTYPE_IS_DECLARED YYSTYPE_IS_DECLARED85,2499

backend/obj/fmgr.h,407
#define FMGR_HFMGR_H22,658
#define	MAXFMGRARGS	MAXFMGRARGS33,979
    char *data[MAXFMGRARGS];data36,1019
} FmgrValues;FmgrValues37,1048
#define	FMGR_PTR2(FMGR_PTR265,1903
#define	FMGR_PTR2(FMGR_PTR267,1982
#define	SEL_CONSTANT SEL_CONSTANT73,2157
#define	SEL_RIGHT	SEL_RIGHT74,2228
#define F_BOOLIN F_BOOLIN76,2294
#define F_BOOLOUT F_BOOLOUT77,2314
#define F_TEXTOUT F_TEXTOUT78,2335

backend/obj/bootparse.c,7713
#define YYBISON YYBISON44,2057
#define YYBISON_VERSION YYBISON_VERSION47,2098
#define YYSKELETON_NAME YYSKELETON_NAME50,2151
#define YYPURE YYPURE53,2206
#define YYPUSH YYPUSH56,2245
#define YYPULL YYPULL59,2284
#define YYLSP_NEEDED YYLSP_NEEDED62,2326
#define DO_START DO_START76,2621
#define DO_END DO_END78,2668
# define YYDEBUG YYDEBUG90,2851
# undef YYERROR_VERBOSEYYERROR_VERBOSE95,2941
# define YYERROR_VERBOSE YYERROR_VERBOSE96,2965
# define YYERROR_VERBOSE YYERROR_VERBOSE98,2998
# define YYTOKEN_TABLE YYTOKEN_TABLE103,3088
# define YYTOKENTYPEYYTOKENTYPE109,3157
   enum Int_yytokentype {Int_yytokentype112,3281
     ID = 258,ID113,3307
     OPEN = 259,OPEN114,3322
     XCLOSE = 260,XCLOSE115,3339
     XCREATE = 261,XCREATE116,3358
     COMMA = 262,COMMA117,3378
     EQUALS = 263,EQUALS118,3396
     LPAREN = 264,LPAREN119,3415
     RPAREN = 265,RPAREN120,3434
     XBOOTSTRAP = 266,XBOOTSTRAP121,3453
     low = 267,low122,3476
     high = 268high123,3492
#define ID ID127,3536
#define OPEN OPEN128,3551
#define XCLOSE XCLOSE129,3568
#define XCREATE XCREATE130,3587
#define COMMA COMMA131,3607
#define EQUALS EQUALS132,3625
#define LPAREN LPAREN133,3644
#define RPAREN RPAREN134,3663
#define XBOOTSTRAP XBOOTSTRAP135,3682
#define low low136,3705
#define high high137,3721
typedef union YYSTYPEYYSTYPE143,3797
  int ival;ival149,3929
} YYSTYPE;YYSTYPE155,3990
# define YYSTYPE_IS_TRIVIAL YYSTYPE_IS_TRIVIAL156,4001
# define Int_yystype Int_yystype157,4031
# define YYSTYPE_IS_DECLARED YYSTYPE_IS_DECLARED158,4097
# undef shortshort169,4249
typedef YYTYPE_UINT8 Int_yytype_uint8;Int_yytype_uint8173,4291
typedef unsigned char Int_yytype_uint8;Int_yytype_uint8175,4336
typedef YYTYPE_INT8 Int_yytype_int8;Int_yytype_int8179,4403
typedef signed char Int_yytype_int8;Int_yytype_int8182,4540
typedef short int Int_yytype_int8;Int_yytype_int8184,4583
typedef YYTYPE_UINT16 Int_yytype_uint16;Int_yytype_uint16188,4647
typedef unsigned short int Int_yytype_uint16;Int_yytype_uint16190,4694
typedef YYTYPE_INT16 Int_yytype_int16;Int_yytype_int16194,4768
typedef short int Int_yytype_int16;Int_yytype_int16196,4813
#  define YYSIZE_T YYSIZE_T201,4896
#  define YYSIZE_T YYSIZE_T203,4951
#  define YYSIZE_T YYSIZE_T207,5157
#  define YYSIZE_T YYSIZE_T209,5190
#define YYSIZE_MAXIMUM YYSIZE_MAXIMUM213,5238
#   define YY_(YY_219,5408
#  define YY_(YY_223,5494
# define YYUSE(YYUSE229,5631
# define YYUSE(YYUSE231,5668
# define YYID(YYID236,5798
YYID (int Int_yyi)YYID241,5934
#    define YYSTACK_ALLOC YYSTACK_ALLOC259,6234
#    define YYSTACK_ALLOC YYSTACK_ALLOC263,6397
#    define alloca alloca266,6517
#    define YYSTACK_ALLOC YYSTACK_ALLOC268,6553
#      define EXIT_SUCCESS EXIT_SUCCESS273,6823
#  define YYSTACK_FREE(YYSTACK_FREE282,6973
#   define YYSTACK_ALLOC_MAXIMUM YYSTACK_ALLOC_MAXIMUM288,7370
#  define YYSTACK_ALLOC YYSTACK_ALLOC291,7452
#  define YYSTACK_FREE YYSTACK_FREE292,7485
#   define YYSTACK_ALLOC_MAXIMUM YYSTACK_ALLOC_MAXIMUM294,7547
#    define EXIT_SUCCESS EXIT_SUCCESS301,7837
#   define YYMALLOC YYMALLOC305,7902
#   define YYFREE YYFREE312,8172
union Int_yyallocInt_yyalloc327,8666
  Int_yytype_int16 Int_yyss_alloc;Int_yyss_alloc329,8686
  YYSTYPE Int_yyvs_alloc;Int_yyvs_alloc330,8721
# define YYSTACK_GAP_MAXIMUM YYSTACK_GAP_MAXIMUM334,8826
# define YYSTACK_BYTES(YYSTACK_BYTES338,8978
# define YYCOPY_NEEDED YYCOPY_NEEDED342,9097
# define YYSTACK_RELOCATE(YYSTACK_RELOCATE349,9406
#   define YYCOPY(YYCOPY367,9993
#   define YYCOPY(YYCOPY370,10100
#define YYFINAL YYFINAL383,10417
#define YYLAST YYLAST385,10476
#define YYNTOKENS YYNTOKENS388,10538
#define YYNNTS YYNNTS390,10601
#define YYNRULES YYNRULES392,10656
#define YYNSTATES YYNSTATES394,10714
#define YYUNDEFTOK YYUNDEFTOK397,10810
#define YYMAXUTOK YYMAXUTOK398,10832
#define YYTRANSLATE(YYTRANSLATE400,10857
static const Int_yytype_uint8 Int_yytranslate[] =Int_yytranslate404,11037
static const Int_yytype_uint8 Int_yyprhs[] =Int_yyprhs438,13152
static const Int_yytype_int8 Int_yyrhs[] =Int_yyrhs445,13377
static const Int_yytype_uint8 Int_yyrline[] =Int_yyrline454,13780
static const char *const Int_yytname[] =Int_yytname464,14140
static const Int_yytype_uint16 Int_yytoknum[] =Int_yytoknum476,14564
static const Int_yytype_uint8 Int_yyr1[] =Int_yyr1484,14796
static const Int_yytype_uint8 Int_yyr2[] =Int_yyr2491,15039
static const Int_yytype_uint8 Int_yydefact[] =Int_yydefact500,15385
static const Int_yytype_int8 Int_yydefgoto[] =Int_yydefgoto508,15636
#define YYPACT_NINF YYPACT_NINF516,15856
static const Int_yytype_int8 Int_yypact[] =Int_yypact517,15880
static const Int_yytype_int8 Int_yypgoto[] =Int_yypgoto525,16126
#define YYTABLE_NINF YYTABLE_NINF534,16456
static const Int_yytype_uint8 Int_yytable[] =Int_yytable535,16480
#define Int_yypact_value_is_default(Int_yypact_value_is_default541,16628
#define Int_yytable_value_is_error(Int_yytable_value_is_error544,16707
static const Int_yytype_int8 Int_yycheck[] =Int_yycheck547,16775
static const Int_yytype_uint8 Int_yystos[] =Int_yystos555,17019
#define Int_yyerrok	Int_yyerrok562,17239
#define Int_yyclearin	Int_yyclearin563,17282
#define YYEMPTY	YYEMPTY564,17327
#define YYEOF	YYEOF565,17349
#define YYACCEPT	YYACCEPT567,17367
#define YYABORT	YYABORT568,17405
#define YYERROR	YYERROR569,17442
#define YYFAIL	YYFAIL579,17849
#define YYRECOVERING(YYRECOVERING587,18173
#define YYBACKUP(YYBACKUP589,18218
#define YYTERROR	YYTERROR606,18627
#define YYERRCODE	YYERRCODE607,18646
#define YYRHSLOC(YYRHSLOC614,18852
# define YYLLOC_DEFAULT(YYLLOC_DEFAULT616,18911
# define YY_LOCATION_PRINT(YY_LOCATION_PRINT639,19662
# define YYLEX YYLEX646,19802
# define YYLEX YYLEX648,19847
#  define YYFPRINTF YYFPRINTF656,20009
# define YYDPRINTF(YYDPRINTF659,20046
# define YY_SYMBOL_PRINT(YY_SYMBOL_PRINT665,20157
Int_yy_symbol_value_print (FILE *Int_yyoutput, int Int_yytype, YYSTYPE const * const Int_yyvaluep)Int_yy_symbol_value_print685,20707
Int_yy_symbol_print (FILE *Int_yyoutput, int Int_yytype, YYSTYPE const * const Int_yyvaluep)Int_yy_symbol_print717,21451
Int_yy_stack_print (Int_yytype_int16 *Int_yybottom, Int_yytype_int16 *Int_yytop)Int_yy_stack_print743,22393
# define YY_STACK_PRINT(YY_STACK_PRINT760,22826
Int_yy_reduce_print (YYSTYPE *Int_yyvsp, int Int_yyrule)Int_yy_reduce_print774,23244
# define YY_REDUCE_PRINT(YY_REDUCE_PRINT798,23968
int Int_yydebug;Int_yydebug806,24209
# define YYDPRINTF(YYDPRINTF808,24247
# define YY_SYMBOL_PRINT(YY_SYMBOL_PRINT809,24272
# define YY_STACK_PRINT(YY_STACK_PRINT810,24327
# define YY_REDUCE_PRINT(YY_REDUCE_PRINT811,24364
# define YYINITDEPTH YYINITDEPTH817,24498
# define YYMAXDEPTH YYMAXDEPTH828,24854
#   define Int_yystrlen Int_yystrlen836,24977
Int_yystrlen (const char *Int_yystr)Int_yystrlen842,25165
#   define Int_yystpcpy Int_yystpcpy859,25508
Int_yystpcpy (char *Int_yydest, const char *Int_yysrc)Int_yystpcpy866,25748
Int_yytnamerr (char *Int_yyres, const char *Int_yystr)Int_yytnamerr894,26561
Int_yysyntax_error (YYSIZE_T *Int_yymsg_alloc, char **Int_yymsg,Int_yysyntax_error942,27690
# define YYCASE_(YYCASE_1021,31535
# undef YYCASE_YYCASE_1031,32090
Int_yydestruct (const char *Int_yymsg, int Int_yytype, YYSTYPE *Int_yyvaluep)Int_yydestruct1078,33436
int Int_yychar;Int_yychar1119,34253
YYSTYPE Int_yylval;Int_yylval1122,34321
int Int_yynerrs;Int_yynerrs1125,34381
Int_yyparse (void *YYPARSE_PARAM)Int_yyparse1136,34570
#define YYPOPSTACK(YYPOPSTACK1192,35947

backend/obj/bootscanner.c,10143
#define  YY_INT_ALIGNED YY_INT_ALIGNED4,25
#define FLEX_SCANNERFLEX_SCANNER8,103
#define YY_FLEX_MAJOR_VERSION YY_FLEX_MAJOR_VERSION9,124
#define YY_FLEX_MINOR_VERSION YY_FLEX_MINOR_VERSION10,156
#define YY_FLEX_SUBMINOR_VERSION YY_FLEX_SUBMINOR_VERSION11,188
#define FLEX_BETAFLEX_BETA13,257
#define FLEXINT_HFLEXINT_H29,555
#define __STDC_LIMIT_MACROS __STDC_LIMIT_MACROS39,866
typedef int8_t flex_int8_t;flex_int8_t43,926
typedef uint8_t flex_uint8_t;flex_uint8_t44,954
typedef int16_t flex_int16_t;flex_int16_t45,984
typedef uint16_t flex_uint16_t;flex_uint16_t46,1014
typedef int32_t flex_int32_t;flex_int32_t47,1046
typedef uint32_t flex_uint32_t;flex_uint32_t48,1076
typedef signed char flex_int8_t;flex_int8_t50,1114
typedef short int flex_int16_t;flex_int16_t51,1147
typedef int flex_int32_t;flex_int32_t52,1179
typedef unsigned char flex_uint8_t; flex_uint8_t53,1205
typedef unsigned short int flex_uint16_t;flex_uint16_t54,1242
typedef unsigned int flex_uint32_t;flex_uint32_t55,1284
#define INT8_MIN INT8_MIN59,1370
#define INT16_MIN INT16_MIN62,1433
#define INT32_MIN INT32_MIN65,1500
#define INT8_MAX INT8_MAX68,1571
#define INT16_MAX INT16_MAX71,1633
#define INT32_MAX INT32_MAX74,1697
#define UINT8_MAX UINT8_MAX77,1766
#define UINT16_MAX UINT16_MAX80,1830
#define UINT32_MAX UINT32_MAX83,1896
#define YY_USE_CONSTYY_USE_CONST93,2066
#define YY_USE_CONSTYY_USE_CONST100,2187
#define Int_yyconst Int_yyconst106,2289
#define Int_yyconstInt_yyconst108,2321
#define YY_NULL YY_NULL112,2382
#define YY_SC_TO_UI(YY_SC_TO_UI119,2629
#define BEGIN BEGIN125,2860
#define YY_START YY_START131,3063
#define YYSTATE YYSTATE132,3107
#define YY_STATE_EOF(YY_STATE_EOF135,3190
#define YY_NEW_FILE YY_NEW_FILE138,3310
#define YY_END_OF_BUFFER_CHAR YY_END_OF_BUFFER_CHAR140,3357
#define YY_BUF_SIZE YY_BUF_SIZE149,3623
#define YY_BUF_SIZE YY_BUF_SIZE151,3655
#define YY_STATE_BUF_SIZE YY_STATE_BUF_SIZE157,3805
#define YY_TYPEDEF_YY_BUFFER_STATEYY_TYPEDEF_YY_BUFFER_STATE160,3917
typedef struct Int_yy_buffer_state *YY_BUFFER_STATE;YY_BUFFER_STATE161,3952
#define EOB_ACT_CONTINUE_SCAN EOB_ACT_CONTINUE_SCAN168,4073
#define EOB_ACT_END_OF_FILE EOB_ACT_END_OF_FILE169,4105
#define EOB_ACT_LAST_MATCH EOB_ACT_LAST_MATCH170,4135
    #define YY_LESS_LINENO(YY_LESS_LINENO172,4165
#define Int_yyless(Int_yyless175,4280
#define unput(unput188,4679
#define YY_TYPEDEF_YY_SIZE_TYY_TYPEDEF_YY_SIZE_T191,4762
typedef size_t Int_yy_size_t;Int_yy_size_t192,4791
#define YY_STRUCT_YY_BUFFER_STATEYY_STRUCT_YY_BUFFER_STATE196,4863
struct Int_yy_buffer_stateInt_yy_buffer_state197,4897
	FILE *Int_yy_input_file;Int_yy_input_file199,4927
	char *Int_yy_ch_buf;		/* input buffer */Int_yy_ch_buf201,4954
	char *Int_yy_buf_pos;		/* current position in input buffer */Int_yy_buf_pos202,4996
	Int_yy_size_t Int_yy_buf_size;Int_yy_buf_size207,5143
	int Int_yy_n_chars;Int_yy_n_chars212,5265
	int Int_yy_is_our_buffer;Int_yy_is_our_buffer218,5431
	int Int_yy_is_interactive;Int_yy_is_interactive225,5673
	int Int_yy_at_bol;Int_yy_at_bol231,5844
    int Int_yy_bs_lineno; /**< The line count. */Int_yy_bs_lineno233,5865
    int Int_yy_bs_column; /**< The column count. */Int_yy_bs_column234,5915
	int Int_yy_fill_buffer;Int_yy_fill_buffer239,6054
	int Int_yy_buffer_status;Int_yy_buffer_status241,6080
#define YY_BUFFER_NEW YY_BUFFER_NEW243,6108
#define YY_BUFFER_NORMAL YY_BUFFER_NORMAL244,6132
#define YY_BUFFER_EOF_PENDING YY_BUFFER_EOF_PENDING255,6638
static size_t Int_yy_buffer_stack_top = 0; /**< index of top of stack. */Int_yy_buffer_stack_top261,6746
static size_t Int_yy_buffer_stack_max = 0; /**< capacity of stack. */Int_yy_buffer_stack_max262,6820
static YY_BUFFER_STATE * Int_yy_buffer_stack = 0; /**< Stack as an array. */Int_yy_buffer_stack263,6890
#define YY_CURRENT_BUFFER YY_CURRENT_BUFFER271,7162
#define YY_CURRENT_BUFFER_LVALUE YY_CURRENT_BUFFER_LVALUE278,7470
static char Int_yy_hold_char;Int_yy_hold_char281,7628
static int Int_yy_n_chars;		/* number of characters read into Int_yy_ch_buf */Int_yy_n_chars282,7658
int Int_yyleng;Int_yyleng283,7737
static char *Int_yy_c_buf_p = (char *) 0;Int_yy_c_buf_p286,7799
static int Int_yy_init = 0;		/* whether we need to initialize */Int_yy_init287,7841
static int Int_yy_start = 0;	/* start state number */Int_yy_start288,7906
static int Int_yy_did_buffer_switch_on_eof;Int_yy_did_buffer_switch_on_eof293,8097
#define YY_FLUSH_BUFFER YY_FLUSH_BUFFER307,8661
#define Int_yy_new_buffer Int_yy_new_buffer317,9049
#define Int_yy_set_interactive(Int_yy_set_interactive319,9097
#define Int_yy_set_bol(Int_yy_set_bol329,9393
#define YY_AT_BOL(YY_AT_BOL339,9656
typedef unsigned char YY_CHAR;YY_CHAR343,9743
FILE *Int_yyin = (FILE *) 0, *Int_yyout = (FILE *) 0;Int_yyin345,9775
FILE *Int_yyin = (FILE *) 0, *Int_yyout = (FILE *) 0;Int_yyout345,9775
typedef int Int_yy_state_type;Int_yy_state_type347,9830
int Int_yylineno = 1;Int_yylineno351,9888
#define Int_yytext_ptr Int_yytext_ptr354,9936
#define YY_DO_BEFORE_ACTION YY_DO_BEFORE_ACTION364,10333
#define YY_NUM_RULES YY_NUM_RULES371,10536
#define YY_END_OF_BUFFER YY_END_OF_BUFFER372,10559
struct Int_yy_trans_infoInt_yy_trans_info375,10668
	flex_int32_t Int_yy_verify;Int_yy_verify377,10696
	flex_int32_t Int_yy_nxt;Int_yy_nxt378,10725
static Int_yyconst flex_int16_t Int_yy_accept[35] =Int_yy_accept380,10755
static Int_yyconst flex_int32_t Int_yy_ec[256] =Int_yy_ec388,11050
static Int_yyconst flex_int32_t Int_yy_meta[20] =Int_yy_meta420,12780
static Int_yyconst flex_int16_t Int_yy_base[36] =Int_yy_base426,12973
static Int_yyconst flex_int16_t Int_yy_def[36] =Int_yy_def434,13272
static Int_yyconst flex_int16_t Int_yy_nxt[83] =Int_yy_nxt442,13570
static Int_yyconst flex_int16_t Int_yy_chk[83] =Int_yy_chk455,14175
static Int_yy_state_type Int_yy_last_accepting_state;Int_yy_last_accepting_state468,14780
static char *Int_yy_last_accepting_cpos;Int_yy_last_accepting_cpos469,14834
int Int_yy_flex_debug = 0;Int_yy_flex_debug472,14906
#define REJECT REJECT477,15036
#define Int_yymore(Int_yymore478,15080
#define YY_MORE_ADJ YY_MORE_ADJ479,15134
#define YY_RESTORE_YY_MORE_OFFSETYY_RESTORE_YY_MORE_OFFSET480,15156
char *Int_yytext;Int_yytext481,15190
YYSTYPE Int_yylval;Int_yylval486,15402
int Int_yyline;Int_yyline487,15422
#define INITIAL INITIAL490,15464
#define YY_EXTRA_TYPE YY_EXTRA_TYPE501,15766
#define YY_READ_BUF_SIZE YY_READ_BUF_SIZE571,17137
#define YY_READ_BUF_SIZE YY_READ_BUF_SIZE573,17174
#define ECHO ECHO582,17414
#define YY_INPUT(YY_INPUT589,17636
#define Int_yyterminate(Int_yyterminate626,18582
#define YY_START_STACK_INCR YY_START_STACK_INCR631,18721
#define YY_FATAL_ERROR(YY_FATAL_ERROR636,18811
#define YY_DECL_IS_OURS YY_DECL_IS_OURS645,19048
#define YY_DECL YY_DECL649,19105
#define YY_USER_ACTIONYY_USER_ACTION656,19293
#define YY_BREAK YY_BREAK661,19386
#define YY_RULE_SETUP YY_RULE_SETUP664,19418
static int Int_yy_get_next_buffer (void)Int_yy_get_next_buffer948,27286
    static Int_yy_state_type Int_yy_get_previous_state (void)Int_yy_get_previous_state1082,31115
    static Int_yy_state_type Int_yy_try_NUL_trans  (Int_yy_state_type Int_yy_current_state )Int_yy_try_NUL_trans1114,32184
    static void Int_yyunput (int c, register char * Int_yy_bp )Int_yyunput1137,32994
    static int Int_yyinput (void)Int_yyinput1176,34170
    void Int_yyrestart  (FILE * input_file )Int_yyrestart1253,36035
    void Int_yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )Int_yy_switch_to_buffer1270,36420
static void Int_yy_load_buffer_state  (void)Int_yy_load_buffer_state1301,37319
    YY_BUFFER_STATE Int_yy_create_buffer  (FILE * file, int  size )Int_yy_create_buffer1315,37832
    void Int_yy_delete_buffer (YY_BUFFER_STATE  b )Int_yy_delete_buffer1343,38579
    static void Int_yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )Int_yy_init_buffer1366,39128
    void Int_yy_flush_buffer (YY_BUFFER_STATE  b )Int_yy_flush_buffer1394,39901
void Int_yypush_buffer_state (YY_BUFFER_STATE new_buffer )Int_yypush_buffer_state1423,40623
void Int_yypop_buffer_state (void)Int_yypop_buffer_state1453,41440
static void Int_yyensure_buffer_stack (void)Int_yyensure_buffer_stack1472,41859
YY_BUFFER_STATE Int_yy_scan_buffer  (char * base, Int_yy_size_t  size )Int_yy_scan_buffer1521,43579
YY_BUFFER_STATE Int_yy_scan_string (Int_yyconst char * Int_yystr )Int_yy_scan_string1558,44732
YY_BUFFER_STATE Int_yy_scan_bytes  (Int_yyconst char * Int_yybytes, int  _yybytes_len )Int_yy_scan_bytes1571,45181
#define YY_EXIT_FAILURE YY_EXIT_FAILURE1602,45944
static void Int_yy_fatal_error (Int_yyconst char* msg )Int_yy_fatal_error1605,45978
#undef Int_yylessInt_yyless1613,46169
#define Int_yyless(Int_yyless1614,46187
int Int_yyget_lineno  (void)Int_yyget_lineno1633,46706
FILE *Int_yyget_in  (void)Int_yyget_in1642,46808
FILE *Int_yyget_out  (void)Int_yyget_out1650,46900
int Int_yyget_leng  (void)Int_yyget_leng1658,47008
char *Int_yyget_text  (void)Int_yyget_text1667,47103
void Int_yyset_lineno (int  line_number )Int_yyset_lineno1676,47227
void Int_yyset_in (FILE *  in_str )Int_yyset_in1688,47464
void Int_yyset_out (FILE *  out_str )Int_yyset_out1693,47533
int Int_yyget_debug  (void)Int_yyget_debug1698,47606
void Int_yyset_debug (int  bdebug )Int_yyset_debug1703,47673
static int Int_yy_init_globals (void)Int_yy_init_globals1708,47751
int Int_yylex_destroy  (void)Int_yylex_destroy1737,48489
static void Int_yy_flex_strncpy (char* s1, Int_yyconst char * s2, int n )Int_yy_flex_strncpy1763,49079
static int Int_yy_flex_strlen (Int_yyconst char * s )Int_yy_flex_strlen1772,49248
void *Int_yyalloc (Int_yy_size_t  size )Int_yyalloc1782,49373
void *Int_yyrealloc  (void * ptr, Int_yy_size_t  size )Int_yyrealloc1787,49452
void Int_yyfree (void * ptr )Int_yyfree1799,49916
#define YYTABLES_NAME YYTABLES_NAME1804,50018
Int_yywrap(){Int_yywrap1810,50142
Int_yyerror(str)Int_yyerror1814,50169

backend/obj/fmgrtab.c,310
# define MAXINT	MAXINT32,1082
static FmgrCall fmgr_builtins[] = {fmgr_builtins44,1311
static int fmgr_nbuiltins = (sizeof(fmgr_builtins) / sizeof(FmgrCall)) - 1;fmgr_nbuiltins56,1587
FmgrCall *fmgr_isbuiltin(Oid id)fmgr_isbuiltin58,1664
func_ptr fmgr_lookupByName(char *name)fmgr_lookupByName80,2098

backend/obj/bootstrap_tokens.h,185
typedef int YYSTYPE;YYSTYPE39,1590
# define YYSTYPE_IS_TRIVIAL YYSTYPE_IS_TRIVIAL40,1611
# define yystype yystype41,1641
# define YYSTYPE_IS_DECLARED YYSTYPE_IS_DECLARED42,1703

backend/main/main.c,39
main(int argc, char *argv[]){main3,5

backend/lib/dllist.h,388
#define DLLIST_HDLLIST_H2,17
typedef struct Dlelem {Dlelem4,35
  struct Dlelem *dle_next;dle_next5,59
  struct Dlelem *dle_prev;dle_prev6,86
  void          *dle_val;dle_val7,113
  struct Dllist *dle_list;dle_list8,139
} Dlelem;Dlelem9,166
typedef struct Dllist {Dllist11,177
  Dlelem *dll_head;dll_head12,201
  Dlelem *dll_tail;dll_tail13,221
} Dllist;Dllist14,241

backend/catalog/index.c,124
AccessMethodObjectIdGetAccessMethodTupleForm(Oid accessMethodObjectId){AccessMethodObjectIdGetAccessMethodTupleForm10,203

backend/catalog/pg_rewrite.h,537
#define PG_REWRITE_HPG_REWRITE_H2,21
#define Natts_pg_rewrite Natts_pg_rewrite4,43
#define Anum_pg_rewrite_rulename Anum_pg_rewrite_rulename5,80
#define Anum_pg_rewrite_ev_type Anum_pg_rewrite_ev_type6,117
#define Anum_pg_rewrite_ev_class Anum_pg_rewrite_ev_class7,154
#define Anum_pg_rewrite_ev_attr Anum_pg_rewrite_ev_attr8,191
#define Anum_pg_rewrite_is_instead Anum_pg_rewrite_is_instead9,228
#define Anum_pg_rewrite_ev_qual Anum_pg_rewrite_ev_qual10,265
#define Anum_pg_rewrite_action Anum_pg_rewrite_action11,302

backend/catalog/catalog.c,22
newoid(){newoid6,80

backend/catalog/pg_amproc.h,249
#define PG_AMPROC_HPG_AMPROC_H2,20
CATALOG(){CATALOG5,63
typedef FormData_pg_amproc *Form_pg_amproc;Form_pg_amproc12,161
#define Anum_pg_amproc_amid Anum_pg_amproc_amid14,206
#define Anum_pg_amproc_amopclaid Anum_pg_amproc_amopclaid15,241

backend/catalog/catalog.h,33
#define CATALOG_HCATALOG_H2,18

backend/catalog/pg_proc.c,0

backend/catalog/heap.c,377
typedef struct tempRelList{tempRelList7,131
  Relation *rels;rels8,159
  int       num;num9,177
  int       size;size10,194
} TempRelList;TempRelList11,212
#define TEMP_REL_LIST_SIZE TEMP_REL_LIST_SIZE13,228
static TempRelList *tempRels = NULL;tempRels14,258
heap_creatr(char      *name,heap_creatr17,305
AddToTempRelList(Relation r){AddToTempRelList103,2324

backend/catalog/pg_index.h,199
#define PG_INDEX_HPG_INDEX_H2,19
CATALOG(pg_index) {CATALOG5,61
typedef FormData_pg_index *IndexTupleForm;IndexTupleForm16,256
#define Anum_pg_index_indexrelid Anum_pg_index_indexrelid18,300

backend/catalog/pg_proc.h,171
#define PG_PROC_HPG_PROC_H2,18
#define ObjectIdEqualRegProcedure ObjectIdEqualRegProcedure4,58
#define Character16EqualRegProcedure Character16EqualRegProcedure5,99

backend/catalog/pg_amop.h,239
#define PG_AMOP_HPG_AMOP_H2,18
#define Anum_pg_amop_amopid Anum_pg_amop_amopid5,59
#define Anum_pg_amop_amopclaid Anum_pg_amop_amopclaid6,92
CATALOG(pg_amop){CATALOG8,126
typedef FormData_pg_amop *Form_pg_amop;Form_pg_amop17,291

backend/catalog/pg_attribute.h,1356
#define PG_ATTRIBUTE_HPG_ATTRIBUTE_H2,23
#define Natts_pg_attribute Natts_pg_attribute5,69
#define Anum_pg_attribute_attrelid Anum_pg_attribute_attrelid6,110
#define Anum_pg_attribute_attname Anum_pg_attribute_attname7,150
#define Anum_pg_attribute_atttypeid Anum_pg_attribute_atttypeid8,190
#define Anum_pg_attribute_attdefrel Anum_pg_attribute_attdefrel9,230
#define Anum_pg_attribute_attnvals Anum_pg_attribute_attnvals10,270
#define Anum_pg_attribute_atttyparg Anum_pg_attribute_atttyparg11,310
#define Anum_pg_attribute_attlen Anum_pg_attribute_attlen12,350
#define Anum_pg_attribute_attnum Anum_pg_attribute_attnum13,390
#define Anum_pg_attribute_attbound Anum_pg_attribute_attbound14,430
#define Anum_pg_attribute_attbyval Anum_pg_attribute_attbyval15,470
#define Anum_pg_attribute_attcanindex Anum_pg_attribute_attcanindex16,511
#define Anum_pg_attribute_attproc Anum_pg_attribute_attproc17,552
#define Anum_pg_attribute_attrelems Anum_pg_attribute_attrelems18,593
#define Anum_pg_attribute_attcacheoff Anum_pg_attribute_attcacheoff19,634
#define Anum_pg_attribute_attisset Anum_pg_attribute_attisset20,675
#define Anum_pg_attribute_attalign Anum_pg_attribute_attalign21,716
typedef FormData_pg_attribute *AttributeTupleForm;AttributeTupleForm43,1160
#define ATTRIBUTE_TUPLE_SIZE ATTRIBUTE_TUPLE_SIZE45,1212

backend/catalog/pg_am.h,112
#define PG_AM_HPG_AM_H2,16
CATALOG(pg_am){CATALOG5,55
typedef FormData_pg_am *Form_pg_am;Form_pg_am30,554

backend/catalog/heap.h,27
#define HEAP_HHEAP_H2,15

backend/catalog/pg_type.h,33
#define PG_TYPE_HPG_TYPE_H2,18

backend/catalog/catname.h,711
#define CATANAME_HCATANAME_H2,19
#define AccessMethodRelationName AccessMethodRelationName4,39
#define RelationRelationName RelationRelationName5,89
#define RewriteRelationName RewriteRelationName6,142
#define AttributeRelationName AttributeRelationName7,197
#define ProcedureRelationName ProcedureRelationName8,254
#define TypeRelationName TypeRelationName9,306
#define VariableRelationName VariableRelationName10,358
#define OperatorRelationName OperatorRelationName11,414
#define AccessMethodOperatorRelationName AccessMethodOperatorRelationName12,470
#define AccessMethodProcedureRelationName AccessMethodProcedureRelationName13,522
#define IndexRelationName IndexRelationName14,576

backend/catalog/pg_class.h,497
#define PG_CLASS_HPG_CLASS_H2,19
#define RelOid_pg_type RelOid_pg_type4,39
#define RelOid_pg_attribute RelOid_pg_attribute5,70
#define RelOid_pg_proc RelOid_pg_proc6,101
#define RelOid_pg_class RelOid_pg_class7,132
#define RELKIND_INDEX RELKIND_INDEX9,164
#define RELKIND_UNCATALOGED RELKIND_UNCATALOGED10,196
typedef FormData_pg_class *Form_pg_class;Form_pg_class22,505
#define CLASS_TUPLE_SIZE CLASS_TUPLE_SIZE24,548
#define Anum_pg_class_relname Anum_pg_class_relname27,636

backend/rewrite/prs2lock.h,471
#define PRS2LOCK_HPRS2LOCK_H2,19
typedef struct RewriteRule {RewriteRule6,67
  Oid        ruleId;ruleId7,96
  CmdType    event;event8,117
  AttrNumber attrno;attrno9,137
  Node       *qual;qual10,158
  List       *actions;actions11,178
  bool       isInstead;isInstead12,201
} RewriteRule;RewriteRule13,225
typedef struct RuleLock {RuleLock15,241
  int         numLocks;numLocks16,267
  RewriteRule **rules;rules17,291
} RuleLock;RuleLock18,314

backend/y.tab.c,7168
#define YYBISON YYBISON44,2053
#define YYBISON_VERSION YYBISON_VERSION47,2094
#define YYSKELETON_NAME YYSKELETON_NAME50,2147
#define YYPURE YYPURE53,2202
#define YYPUSH YYPUSH56,2241
#define YYPULL YYPULL59,2280
#define YYLSP_NEEDED YYLSP_NEEDED62,2322
#define DO_START DO_START74,2564
#define DO_END DO_END76,2611
# define YYDEBUG YYDEBUG88,2794
# undef YYERROR_VERBOSEYYERROR_VERBOSE93,2884
# define YYERROR_VERBOSE YYERROR_VERBOSE94,2908
# define YYERROR_VERBOSE YYERROR_VERBOSE96,2941
# define YYTOKEN_TABLE YYTOKEN_TABLE101,3031
# define YYTOKENTYPEYYTOKENTYPE107,3100
   enum yytokentype {yytokentype110,3224
     ID = 258,ID111,3246
     OPEN = 259,OPEN112,3261
     XCLOSE = 260,XCLOSE113,3278
     XCREATE = 261,XCREATE114,3297
     COMMA = 262,COMMA115,3317
     EQUALS = 263,EQUALS116,3335
     LPAREN = 264,LPAREN117,3354
     RPAREN = 265,RPAREN118,3373
     XBOOTSTRAP = 266,XBOOTSTRAP119,3392
     low = 267,low120,3415
     high = 268high121,3431
#define ID ID125,3475
#define OPEN OPEN126,3490
#define XCLOSE XCLOSE127,3507
#define XCREATE XCREATE128,3526
#define COMMA COMMA129,3546
#define EQUALS EQUALS130,3564
#define LPAREN LPAREN131,3583
#define RPAREN RPAREN132,3602
#define XBOOTSTRAP XBOOTSTRAP133,3621
#define low low134,3644
#define high high135,3660
typedef union YYSTYPEYYSTYPE141,3736
  int ival;ival147,3869
} YYSTYPE;YYSTYPE153,3930
# define YYSTYPE_IS_TRIVIAL YYSTYPE_IS_TRIVIAL154,3941
# define yystype yystype155,3971
# define YYSTYPE_IS_DECLARED YYSTYPE_IS_DECLARED156,4033
# undef shortshort167,4185
typedef YYTYPE_UINT8 yytype_uint8;yytype_uint8171,4227
typedef unsigned char yytype_uint8;yytype_uint8173,4268
typedef YYTYPE_INT8 yytype_int8;yytype_int8177,4331
typedef signed char yytype_int8;yytype_int8180,4464
typedef short int yytype_int8;yytype_int8182,4503
typedef YYTYPE_UINT16 yytype_uint16;yytype_uint16186,4563
typedef unsigned short int yytype_uint16;yytype_uint16188,4606
typedef YYTYPE_INT16 yytype_int16;yytype_int16192,4676
typedef short int yytype_int16;yytype_int16194,4717
#  define YYSIZE_T YYSIZE_T199,4796
#  define YYSIZE_T YYSIZE_T201,4851
#  define YYSIZE_T YYSIZE_T205,5057
#  define YYSIZE_T YYSIZE_T207,5090
#define YYSIZE_MAXIMUM YYSIZE_MAXIMUM211,5138
#   define YY_(YY_217,5308
#  define YY_(YY_221,5394
# define YYUSE(YYUSE227,5531
# define YYUSE(YYUSE229,5568
# define YYID(YYID234,5698
YYID (int yyi)YYID239,5834
#    define YYSTACK_ALLOC YYSTACK_ALLOC257,6114
#    define YYSTACK_ALLOC YYSTACK_ALLOC261,6277
#    define alloca alloca264,6397
#    define YYSTACK_ALLOC YYSTACK_ALLOC266,6433
#      define EXIT_SUCCESS EXIT_SUCCESS271,6703
#  define YYSTACK_FREE(YYSTACK_FREE280,6853
#   define YYSTACK_ALLOC_MAXIMUM YYSTACK_ALLOC_MAXIMUM286,7250
#  define YYSTACK_ALLOC YYSTACK_ALLOC289,7332
#  define YYSTACK_FREE YYSTACK_FREE290,7365
#   define YYSTACK_ALLOC_MAXIMUM YYSTACK_ALLOC_MAXIMUM292,7427
#    define EXIT_SUCCESS EXIT_SUCCESS299,7717
#   define YYMALLOC YYMALLOC303,7782
#   define YYFREE YYFREE310,8052
union yyallocyyalloc325,8538
  yytype_int16 yyss_alloc;yyss_alloc327,8554
  YYSTYPE yyvs_alloc;yyvs_alloc328,8581
# define YYSTACK_GAP_MAXIMUM YYSTACK_GAP_MAXIMUM332,8682
# define YYSTACK_BYTES(YYSTACK_BYTES336,8830
# define YYCOPY_NEEDED YYCOPY_NEEDED340,8945
# define YYSTACK_RELOCATE(YYSTACK_RELOCATE347,9254
#   define YYCOPY(YYCOPY365,9805
#   define YYCOPY(YYCOPY368,9912
#define YYFINAL YYFINAL381,10205
#define YYLAST YYLAST383,10265
#define YYNTOKENS YYNTOKENS386,10327
#define YYNNTS YYNNTS388,10390
#define YYNRULES YYNRULES390,10445
#define YYNSTATES YYNSTATES392,10503
#define YYUNDEFTOK YYUNDEFTOK395,10599
#define YYMAXUTOK YYMAXUTOK396,10621
#define YYTRANSLATE(YYTRANSLATE398,10646
static const yytype_uint8 yytranslate[] =yytranslate402,10822
static const yytype_uint8 yyprhs[] =yyprhs436,12929
static const yytype_int8 yyrhs[] =yyrhs444,13184
static const yytype_uint8 yyrline[] =yyrline455,13669
static const char *const yytname[] =yytname466,14059
static const yytype_uint16 yytoknum[] =yytoknum479,14506
static const yytype_uint8 yyr1[] =yyr1487,14730
static const yytype_uint8 yyr2[] =yyr2495,15003
static const yytype_uint8 yydefact[] =yydefact505,15379
static const yytype_int8 yydefgoto[] =yydefgoto513,15664
#define YYPACT_NINF YYPACT_NINF521,15890
static const yytype_int8 yypact[] =yypact522,15914
static const yytype_int8 yypgoto[] =yypgoto530,16194
#define YYTABLE_NINF YYTABLE_NINF539,16530
static const yytype_uint8 yytable[] =yytable540,16554
#define yypact_value_is_default(yypact_value_is_default547,16781
#define yytable_value_is_error(yytable_value_is_error550,16848
static const yytype_int8 yycheck[] =yycheck553,16908
static const yytype_uint8 yystos[] =yystos562,17231
#define yyerrok	yyerrok569,17485
#define yyclearin	yyclearin570,17520
#define YYEMPTY	YYEMPTY571,17557
#define YYEOF	YYEOF572,17579
#define YYACCEPT	YYACCEPT574,17597
#define YYABORT	YYABORT575,17631
#define YYERROR	YYERROR576,17664
#define YYFAIL	YYFAIL586,18063
#define YYRECOVERING(YYRECOVERING594,18383
#define YYBACKUP(YYBACKUP596,18424
#define YYTERROR	YYTERROR613,18809
#define YYERRCODE	YYERRCODE614,18828
#define YYRHSLOC(YYRHSLOC621,19034
# define YYLLOC_DEFAULT(YYLLOC_DEFAULT623,19093
# define YY_LOCATION_PRINT(YY_LOCATION_PRINT646,19844
# define YYLEX YYLEX653,19980
# define YYLEX YYLEX655,20021
#  define YYFPRINTF YYFPRINTF663,20179
# define YYDPRINTF(YYDPRINTF666,20216
# define YY_SYMBOL_PRINT(YY_SYMBOL_PRINT672,20323
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)yy_symbol_value_print692,20865
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)yy_symbol_print724,21533
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)yy_stack_print750,22379
# define YY_STACK_PRINT(YY_STACK_PRINT767,22740
yy_reduce_print (YYSTYPE *yyvsp, int yyrule)yy_reduce_print781,23150
# define YY_REDUCE_PRINT(YY_REDUCE_PRINT805,23754
int yydebug;yydebug813,23983
# define YYDPRINTF(YYDPRINTF815,24017
# define YY_SYMBOL_PRINT(YY_SYMBOL_PRINT816,24042
# define YY_STACK_PRINT(YY_STACK_PRINT817,24097
# define YY_REDUCE_PRINT(YY_REDUCE_PRINT818,24134
# define YYINITDEPTH YYINITDEPTH824,24268
# define YYMAXDEPTH YYMAXDEPTH835,24624
#   define yystrlen yystrlen843,24743
yystrlen (const char *yystr)yystrlen849,24927
#   define yystpcpy yystpcpy866,25222
yystpcpy (char *yydest, const char *yysrc)yystpcpy873,25458
yytnamerr (char *yyres, const char *yystr)yytnamerr901,26199
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,yysyntax_error949,27228
# define YYCASE_(YYCASE_1028,30781
# undef YYCASE_YYCASE_1038,31332
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)yydestruct1085,32542
int yychar;yychar1126,33267
YYSTYPE yylval;yylval1129,33331
int yynerrs;yynerrs1132,33387
yyparse (void *YYPARSE_PARAM)yyparse1143,33568
#define YYPOPSTACK(YYPOPSTACK1199,34833

backend/port/linux/machine.h,61
#define MACHINE_HMACHINE_H2,18
#define BLCKSZ BLCKSZ4,37

backend/fmgr.h,370
#define FMGR_HFMGR_H22,658
#define	MAXFMGRARGS	MAXFMGRARGS33,979
    char *data[MAXFMGRARGS];data36,1019
} FmgrValues;FmgrValues37,1048
#define	FMGR_PTR2(FMGR_PTR265,1903
#define	FMGR_PTR2(FMGR_PTR267,1982
#define	SEL_CONSTANT SEL_CONSTANT73,2157
#define	SEL_RIGHT	SEL_RIGHT74,2228
#define F_BOOLIN F_BOOLIN76,2294
#define F_BOOLOUT F_BOOLOUT77,2314

backend/executor/tuptable.h,696
#define TUPTABLE_HTUPTABLE_H2,19
typedef struct TupleTableSlot {TupleTableSlot8,142
  NodeTag    type;type9,174
  HeapTuple  val;val10,193
  bool       ttc_shouldFree;ttc_shouldFree11,211
  bool       ttc_descIsNew;ttc_descIsNew12,240
  TupleDesc  ttc_tupleDescriptor;ttc_tupleDescriptor13,268
  Buffer     ttc_buffer;ttc_buffer14,302
  int        ttc_whichplan;ttc_whichplan15,327
} TupleTableSlot;TupleTableSlot16,355
typedef struct TupleTableData {TupleTableData18,374
  int            size;size19,406
  int            next;next20,429
  TupleTableSlot *array;array21,452
} TupleTableData;TupleTableData22,477
typedef TupleTableData *TupleTable;TupleTable24,496

backend/parser/scansup.c,62
serror(char *str)serror6,75
scanstr(char *s)scanstr12,151

backend/bootstrap/bootstrap.c,1519
#define STRTABLESIZE STRTABLESIZE6,100
#define HASHTABLESIZE HASHTABLESIZE7,128
char     *strtable[STRTABLESIZE];strtable9,155
hashnode *hashtable[HASHTABLESIZE];hashtable10,189
static   int strtable_end = -1;strtable_end11,225
#define NUM NUM13,258
#define NUMSQR NUMSQR14,277
#define NUMCUBE NUMCUBE15,297
struct typmap {typmap17,320
  Oid               am_oid;am_oid18,336
  TypeTupleFormData am_typ;am_typ19,364
static struct typmap **Typ = (struct typmap **)NULL;Typ22,396
AttributeTupleForm   attrtypes[MAXATTR];attrtypes24,450
int                  numattr;numattr25,491
Relation    reldesc;reldesc28,523
static char *relname;relname29,544
struct typinfo {typinfo31,567
  char  name[NAMEDATALEN];name32,584
  Oid   oid;oid33,611
  Oid   elem;elem34,624
  int16 len;len35,638
  Oid   inproc;inproc36,651
  Oid   outproc;outproc37,667
static struct typinfo Procid[] = {Procid40,688
static int n_types = sizeof(Procid)/ sizeof(struct typinfo);n_types44,769
BootstrapMain(int argc, char *argv[])BootstrapMain48,836
EnterString(char *str)EnterString55,910
FindStr(char *str, int length, hashnode *mderef)FindStr74,1164
AddStr(char *str, int strlength, int mderef)AddStr90,1446
CompHash(char *str, int len)CompHash127,2310
boot_openrel(char *relname)boot_openrel136,2485
LexIDStr(int ident_num)LexIDStr148,2657
DefineAttr(char *name, char *type, int attnum)DefineAttr154,2723
closerel(char *name){closerel168,2953
gettype(char *type)gettype173,2983

backend/bootstrap/bootstrap.h,241
#define BOOTSTRAP_HBOOTSTRAP_H2,20
#define MAXATTR MAXATTR10,160
typedef struct hashnode{hashnode12,180
  int strnum;strnum13,205
  struct hashnode *next;next14,219
} hashnode;hashnode15,244
#define EMITPROMPT EMITPROMPT20,324

backend/utils/adt/name.c,50
namestrcpy(Name name, char *str){namestrcpy3,26

backend/utils/adt/varlena.c,44
textout(struct varlena *vlena){textout2,7

backend/utils/hash/dynahash.c,277
#define GET_SEG(GET_SEG6,144
#define GET_BUCKET(GET_BUCKET8,241
#define MAKE_HASHOFFSET(MAKE_HASHOFFSET10,339
hash_search(HTAB       *hashp,hash_search14,440
bucket_alloc(HTAB *hashp){bucket_alloc111,3098
call_hash(HTAB *hashp, char *k , int len){call_hash138,3862

backend/utils/builtins.h,35
#define BUILTINS_HBUILTINS_H2,19

backend/utils/mcxt.h,27
#define MCXT_HMCXT_H2,15

backend/utils/catcache.h,917
#define CATCACHE_HCATCACHE_H2,19
#define NCCBUCK NCCBUCK13,224
typedef struct catcache {catcache15,245
  Oid             relationId;relationId16,271
  Oid             indexId;indexId17,301
  char            *cc_relname;cc_relname18,328
  char            *cc_indname;cc_indname19,359
  HeapTuple       (*cc_iscanfunc)();cc_iscanfunc20,390
  TupleDesc       cc_tupdess;cc_tupdess21,427
  int             id;id22,457
  short           cc_ntup;cc_ntup23,479
  short           cc_maxtup;cc_maxtup24,506
  short           cc_nkeys;cc_nkeys25,535
  short           cc_size;cc_size26,563
  short           cc_key[4];cc_key27,590
  short           cc_klen[4];cc_klen28,619
  ScanKeyData     cc_skey[4];cc_skey29,649
  struct catcache *cc_next;cc_next30,679
  Dllist          *cc_lrulist;cc_lrulist31,707
  Dllist          *cc_cache[NCCBUCK+1];cc_cache32,738
} CatCache;CatCache33,778

backend/utils/rel.h,1179
#define REL_HREL_H2,14
#define RelationIsValid(RelationIsValid11,216
typedef struct RelationData {RelationData13,276
  File          rd_fd;rd_fd14,306
  int           rd_nblocks;rd_nblocks15,329
  uint16        rd_refcnt;//引用计数rd_refcnt16,357
  bool          rd_islocal;rd_islocal17,398
  Form_pg_am    rd_am;    //relation access methodrd_am18,426
  Form_pg_class rd_rel;   //关系结构指针rd_rel19,477
  Oid           rd_id;    //关系idrd_id20,524
  Pointer       lockInfo;lockInfo21,561
  TupleDesc     rd_att;   //元组属性rd_att22,587
  bool          rd_isnailed;rd_isnailed23,628
  RuleLock      *rd_rules;rd_rules24,657
  IndexStrategy rd_istrat;rd_istrat25,684
  RegProcedure* rd_support;rd_support26,711
} RelationData;RelationData27,739
typedef RelationData *Relation;Relation29,756
typedef Relation *RelationPtr;RelationPtr31,789
#define RelationSetReferenceCount(RelationSetReferenceCount33,821
#define RelationIncrementReferenceCount(RelationIncrementReferenceCount34,904
#define RelationGetRelationName(RelationGetRelationName36,985
#define RelationGetTupleDescriptor(RelationGetTupleDescriptor37,1058

backend/utils/error/elog.c,148
static int Debugfile = -1;Debugfile6,79
static int ElogDebugIndentLevel = 0;ElogDebugIndentLevel7,106
elog(int lev, char *fmt, ...)elog10,149

backend/utils/memutils.h,893
#define MEMUTILS_HMEMUTILS_H2,19
#define AllocPointerIsValid(AllocPointerIsValid5,54
typedef struct OrderedElemData OrderedElemData;OrderedElemData7,116
typedef OrderedElemData       *OrderedElem;OrderedElem8,164
typedef struct OrderedSetData OrderedSetData;OrderedSetData10,209
typedef OrderedSetData        *OrderedSet;OrderedSet11,255
struct OrderedElemData {OrderedElemData13,299
  OrderedElem next;next14,324
  OrderedElem prev;prev15,344
  OrderedSet  set;set16,364
struct OrderedSetData{OrderedSetData19,387
  OrderedElem head;head20,410
  OrderedElem dumy;dumy21,430
  OrderedElem tail;tail22,450
  Offset      offset;offset23,470
typedef struct AllocSetData{AllocSetData26,496
  OrderedSetData setData;setData27,525
} AllocSetData;AllocSetData28,551
typedef Pointer AllocPointer;AllocPointer30,568
typedef AllocSetData *AllocSet;AllocSet32,599

backend/utils/tqual.h,107
#define TQUAL_HTQUAL_H2,16
typedef Pointer TimeQual;TimeQual4,33
#define NowTimeQual NowTimeQual5,59

backend/utils/fcache.h,702
#define FCACHE_HFCACHE_H2,17
  int      typlen;typlen5,52
  int      typbyval;typbyval6,71
  func_ptr func;func7,92
  Oid      foid;foid8,109
  Oid      language;language9,126
  int      nargs;nargs10,147
  Oid      *argOidVect;argOidVect11,165
  bool     *nullVect;nullVect12,189
  char     *src;src13,211
  char     *bin;bin14,228
  char     *func_state;func_state15,245
  bool     oneResult;oneResult17,270
  bool     hasSetArg;hasSetArg18,292
  Pointer  funcSlot;funcSlot19,314
  char     *setArg;setArg20,335
  bool     istrusted;istrusted21,355
} FunctionCache, *FunctionCachePtr;FunctionCache22,377
} FunctionCache, *FunctionCachePtr;FunctionCachePtr22,377

backend/utils/relcache.h,35
#define RELCACHE_HRELCACHE_H2,19

backend/utils/cache/catcache.c,490
static int DisableCache;DisableCache8,152
CatCache     *Caches = NULL;Caches9,177
GlobalMemory CacheCxt;CacheCxt10,206
#define INFO_RELID INFO_RELID12,230
#define INFO_RELNAME INFO_RELNAME13,253
typedef struct RelationBuildDescInfo {RelationBuildDescInfo14,276
  int infotype;infotype15,315
    Oid  info_id;info_id17,341
    char *info_name;info_name18,359
  } i;i19,380
} RelationBuildDescInfo;RelationBuildDescInfo20,387
ResetSystemCache(){ResetSystemCache23,418

backend/utils/cache/inval.c,144
ResetSystemCaches(){ResetSystemCaches6,91
CacheInvalidate(Index       cacheId,CacheInvalidate12,185
DiscardInvalid(){DiscardInvalid20,309

backend/utils/cache/rel.c,77
RelationSetIndexSupport(Relation      relation,RelationSetIndexSupport4,29

backend/utils/cache/relcache.c,1886
GlobalMemory CacheCxt;CacheCxt24,585
static List *newlyCreatedRelns = NULL;newlyCreatedRelns25,608
HTAB *RelationNameCache;RelationNameCache27,648
HTAB *RelationIdCache;RelationIdCache28,673
#define INFO_RELID INFO_RELID30,697
#define INFO_RELNAME INFO_RELNAME31,720
typedef struct RelationBuildDescInfo {RelationBuildDescInfo32,743
  int infotype;infotype33,782
    Oid info_id;info_id35,808
    char *info_name;info_name36,825
  } i;i37,846
} RelationBuildDescInfo;RelationBuildDescInfo39,854
 typedef struct relidcacheent {relidcacheent56,1820
   Oid      reloid;reloid57,1852
   Relation reldesc;reldesc58,1872
 } RelIdCacheEnt;RelIdCacheEnt59,1893
 typedef struct relnamecacheent {relnamecacheent61,1912
   NameData relname;relname62,1946
   Relation reldesc;reldesc63,1967
 } RelNameCacheEnt;RelNameCacheEnt64,1988
 #define RelationCacheInsert(RelationCacheInsert66,2009
 #define RelationNameCacheLookup(RelationNameCacheLookup96,3476
 RelationRegisterRelation(Relation relation){RelationRegisterRelation114,4479
 RelationNameGetRelation(char *relationName){RelationNameGetRelation135,5063
 RelationBuildDesc(RelationBuildDescInfo buildinfo){RelationBuildDesc154,5526
 IndexedAccessMethodInitialize(Relation relation){IndexedAccessMethodInitialize210,7107
 RelationBuildRuleLock(Relation relation){RelationBuildRuleLock243,8230
 RelationBuildTupleDsec(RelationBuildDescInfo buildinfo,RelationBuildTupleDsec320,11265
 AllocateRelationDesc(u_int natts, Form_pg_class relp){AllocateRelationDesc329,11598
 ScanPgRelation(RelationBuildDescInfo buildinfo){ScanPgRelation345,12132
 RelationNameCacheGetRelation(char *relationName){RelationNameCacheGetRelation351,12273
 scan_pg_rel_seq(RelationBuildDescInfo buildinfo){scan_pg_rel_seq373,12750
build_tupdesc_seq(RelationBuildDescInfo buildinfo,build_tupdesc_seq429,14501

backend/utils/mmgr/palloc.c,155
palloc(Size size){palloc3,28
pfree(void *pointer){pfree8,78
repalloc(void *pointer, Size size){repalloc13,127
pstrdup(char * string){pstrdup18,205

backend/utils/mmgr/mcxt.c,819
static struct MemoryContextMethodsData GlobalContextMethodsData = {GlobalContextMethodsData12,441
static struct GlobalMemory TopGlobalMemoryData = {TopGlobalMemoryData19,618
MemoryContext TopMemoryContext = (MemoryContext)&TopGlobalMemoryData;TopMemoryContext27,750
CreateGlobalMemory(char *name){CreateGlobalMemory30,834
MemoryContextSwitchTo(MemoryContext context){MemoryContextSwitchTo42,1046
GlobalMemoryAlloc(GlobalMemory this, Size size){GlobalMemoryAlloc55,1316
GlobalMemoryFree(GlobalMemory this,GlobalMemoryFree60,1428
GlobalMemoryGetName(GlobalMemory this)GlobalMemoryGetName66,1562
GlobalMemoryDump(GlobalMemory this){GlobalMemoryDump72,1641
OrderedSetContains(OrderedSet set, OrderedElem elem){OrderedSetContains91,2127
GlobalMemoryRealloc(GlobalMemory this,GlobalMemoryRealloc96,2266

backend/utils/mmgr/oset.c,558
OrderedElemGetPredecessor(OrderedElem elem){OrderedElemGetPredecessor10,276
OrderedElemGetBase(OrderedElem elem){OrderedElemGetBase20,439
OrderedElemGetSuccessor(OrderedElem elem){OrderedElemGetSuccessor28,609
OrderedElemInit(OrderedElem elem, OrderedSet set){OrderedElemInit38,755
OrderedElemPushInto(OrderedElem elem, OrderedSet set){OrderedElemPushInto45,870
OrderedElemPush(OrderedElem elem){OrderedElemPush51,991
OrderedElemPushHead(OrderedElem elem){OrderedElemPushHead56,1068
OrderedSetGetHead(OrderedSet set){OrderedSetGetHead64,1242

backend/utils/mmgr/aset.c,1026
typedef struct AllocElemData {AllocElemData4,53
  OrderedElemData elemData;elemData5,84
  Size            size;size6,112
} AllocElemData;AllocElemData7,136
typedef AllocElemData *AllocElem;AllocElem8,153
#define AllocPointerGetAllocElem(AllocPointerGetAllocElem9,187
#define AllocElemGetAllocPointer(AllocElemGetAllocPointer10,259
#define AllocElemIsValid(AllocElemIsValid11,327
#define AllocElemGetAllocPointer(AllocElemGetAllocPointer12,381
AllocSetAlloc(AllocSet set, Size size){AllocSetAlloc18,579
AllocSetFree(AllocSet set, AllocPointer pointer){AllocSetFree36,949
AllocSetContains(AllocSet set, AllocPointer pointer)AllocSetContains46,1074
AllocPointerDump(AllocPointer pointer){AllocPointerDump55,1308
AllocSetDump(AllocSet set){AllocSetDump60,1416
AllocSetIterate(AllocSet set,AllocSetIterate68,1560
AllocSetGetFirst(AllocSet set){AllocSetGetFirst88,1986
AllocPointerGetNext(AllocPointer pointer){AllocPointerGetNext101,2217
AllocSetRealloc(AllocSet     set,AllocSetRealloc114,2489

backend/utils/elog.h,198
#define ELOG_HELOG_H2,15
#define NOTICE NOTICE4,31
#define WARN WARN5,48
#define FATAL FATAL6,66
#define DEBUG DEBUG7,83
#define NOIND NOIND8,101
#define ELOG_MAXLEN ELOG_MAXLEN11,121

backend/utils/inval.h,29
#define INVAL_HINVAL_H2,16

backend/utils/init/globals.c,105
BackendId MyBackendId;MyBackendId4,60
int       Quiet = 1;Quiet6,84
char *    DataDir;DataDir7,105

backend/utils/init/miscinit.c,165
static ProcessingMode Mode = NoProcessing;Mode4,46
IsBootstrapProcessingMode(){IsBootstrapProcessingMode7,95
IsInitProcessingMode(){IsInitProcessingMode12,180

backend/utils/hsearch.h,1395
#define HSEARCH_HHSEARCH_H2,18
#define INVALID_INDEX INVALID_INDEX4,37
#define BUCKET_ALLOC_INCR BUCKET_ALLOC_INCR5,67
  HASH_FIND,HASH_FIND8,114
  HASH_ENTER,HASH_ENTER9,127
  HASH_REMOVE,HASH_REMOVE10,141
  HASH_FIND_SAVE,HASH_FIND_SAVE11,156
  HASH_REMOVE_SAVEDHASH_REMOVE_SAVED12,174
} HASHACTION;HASHACTION13,194
typedef struct element {element15,209
  unsigned long next;next16,234
  long           key;key17,256
} ELEMENT;ELEMENT18,278
typedef unsigned long BUCKET_INDEX;BUCKET_INDEX20,290
typedef BUCKET_INDEX *SEGMENT;SEGMENT21,326
typedef unsigned long SEG_OFFSET;SEG_OFFSET22,357
typedef struct hashhdr {hashhdr23,391
  long bsize;bsize24,416
  long bshift;bshift25,430
  long dsize;dsize26,445
  long ssize;ssize27,459
  long sshift;sshift28,473
  long max_bucket;max_bucket29,488
  long high_mask;high_mask30,507
  long low_mask;low_mask31,525
  long ffactor;ffactor32,542
  long nkeys;nkeys33,558
  long nsegs;nsegs34,572
  long keysize;keysize35,586
  long datasize;datasize36,602
  long max_dsize;max_dsize37,619
  BUCKET_INDEX freeBucketIndex;freeBucketIndex38,637
} HHDR;HHDR39,669
typedef struct htab {htab41,678
  HHDR       *hctl;hctl42,700
  long       (*hash)();hash43,720
  char       *segbase;segbase44,744
  SEG_OFFSET *dir;dir45,767
  long       *(*alloc)();alloc46,786
} HTAB;HTAB47,812

backend/utils/palloc.h,31
#define PALLOC_HPALLOC_H2,17

backend/utils/nabstime.h,186
#define NABSTIME_HNABSTIME_H2,19
typedef int32 AbsoluteTime;AbsoluteTime6,79
#define GetCurrentAbsoluteTime(GetCurrentAbsoluteTime8,108
#define getSystemTime(getSystemTime11,179

backend/include/miscadmin.h,374
#define MISCADMIN_HMISCADMIN_H2,20
#define MAX_PARSER_BUFFER MAX_PARSER_BUFFER5,63
#define NDBUFS NDBUFS6,94
typedef enum ProcessingMode {ProcessingMode10,143
  NoProcessing,NoProcessing11,173
  BootstrapProcessing,BootstrapProcessing12,189
  InitProcessing,InitProcessing13,212
  NomalProcessingNomalProcessing14,230
} ProcessingMode;ProcessingMode15,248

backend/include/postgres.h,986
#define POSTGRES_HPOSTGRES_H3,20
#define FirstCommandId FirstCommandId6,55
typedef uint32 TransactionId;TransactionId8,81
typedef uint16 CommandId;CommandId9,111
typedef uint32 Oid;Oid10,137
typedef int32  int4;int411,157
typedef int16  int2;int212,178
typedef int2 int28[8];int2814,200
typedef Oid  oid8[8];oid815,223
#define NAMEDATALEN NAMEDATALEN18,266
#define BOOTSTRAPBOOTSTRAP21,297
#define CATALOG(CATALOG22,315
#define DATA(DATA24,374
#define InvalidOid InvalidOid26,408
#define OidIsValid(OidIsValid27,439
typedef struct nameData {nameData29,503
  char data[NAMEDATALEN];data30,529
} NameData;NameData31,555
typedef NameData *Name;Name32,567
struct varlena {varlena34,592
  int32 vl_len;vl_len35,609
  char  vl_dat[1];vl_dat36,625
typedef struct varlena text;text39,648
typedef Oid regproc;regproc41,678
typedef Oid RegProcedure;RegProcedure42,699
#define STATUS_OK STATUS_OK45,758
#define STATUS_ERROR STATUS_ERROR46,783

backend/include/c.h,1303
#define C_HC_H2,12
#define NULL NULL5,38
typedef unsigned int Index;Index8,61
#define false false10,90
#define true true11,115
#define TRUE TRUE14,153
#define FALSE FALSE18,190
typedef char bool;bool21,214
typedef bool *BoolPtr;BoolPtr22,233
typedef signed   short int16;int1624,257
typedef signed   int   int32;int3225,287
typedef unsigned char  uint8;uint827,318
typedef unsigned short uint16;uint1628,348
typedef unsigned int   uint32;uint3229,379
typedef signed   int Offset;Offset31,411
typedef char *Pointer;Pointer32,440
typedef uint8   bits8;bits834,464
typedef uint16  bits16;bits1635,487
typedef unsigned long Datum;Datum37,512
#define CppConcat(CppConcat39,542
#define Assert(Assert41,571
#define AssertArg(AssertArg42,597
#define AssertState(AssertState43,626
typedef unsigned int Size;Size45,658
#define PointerIsValid(PointerIsValid47,686
#define offsetof(offsetof50,769
#define SET_4_BYTES(SET_4_BYTES53,835
#define NameGetDatum(NameGetDatum55,896
#define PointerGetDatum(PointerGetDatum56,949
#define ObjectIdGetDatum(ObjectIdGetDatum57,987
#define MAXDIM MAXDIM59,1041
  int indx[MAXDIM];indx61,1075
} IntArray;IntArray62,1095
typedef unsigned long Datum;Datum64,1108
typedef Datum         *DatumPtr;DatumPtr65,1137

backend/bootparse.c,7713
#define YYBISON YYBISON44,2057
#define YYBISON_VERSION YYBISON_VERSION47,2098
#define YYSKELETON_NAME YYSKELETON_NAME50,2151
#define YYPURE YYPURE53,2206
#define YYPUSH YYPUSH56,2245
#define YYPULL YYPULL59,2284
#define YYLSP_NEEDED YYLSP_NEEDED62,2326
#define DO_START DO_START74,2568
#define DO_END DO_END76,2615
# define YYDEBUG YYDEBUG88,2798
# undef YYERROR_VERBOSEYYERROR_VERBOSE93,2888
# define YYERROR_VERBOSE YYERROR_VERBOSE94,2912
# define YYERROR_VERBOSE YYERROR_VERBOSE96,2945
# define YYTOKEN_TABLE YYTOKEN_TABLE101,3035
# define YYTOKENTYPEYYTOKENTYPE107,3104
   enum Int_yytokentype {Int_yytokentype110,3228
     ID = 258,ID111,3254
     OPEN = 259,OPEN112,3269
     XCLOSE = 260,XCLOSE113,3286
     XCREATE = 261,XCREATE114,3305
     COMMA = 262,COMMA115,3325
     EQUALS = 263,EQUALS116,3343
     LPAREN = 264,LPAREN117,3362
     RPAREN = 265,RPAREN118,3381
     XBOOTSTRAP = 266,XBOOTSTRAP119,3400
     low = 267,low120,3423
     high = 268high121,3439
#define ID ID125,3483
#define OPEN OPEN126,3498
#define XCLOSE XCLOSE127,3515
#define XCREATE XCREATE128,3534
#define COMMA COMMA129,3554
#define EQUALS EQUALS130,3572
#define LPAREN LPAREN131,3591
#define RPAREN RPAREN132,3610
#define XBOOTSTRAP XBOOTSTRAP133,3629
#define low low134,3652
#define high high135,3668
typedef union YYSTYPEYYSTYPE141,3744
  int ival;ival147,3877
} YYSTYPE;YYSTYPE153,3938
# define YYSTYPE_IS_TRIVIAL YYSTYPE_IS_TRIVIAL154,3949
# define Int_yystype Int_yystype155,3979
# define YYSTYPE_IS_DECLARED YYSTYPE_IS_DECLARED156,4045
# undef shortshort167,4197
typedef YYTYPE_UINT8 Int_yytype_uint8;Int_yytype_uint8171,4239
typedef unsigned char Int_yytype_uint8;Int_yytype_uint8173,4284
typedef YYTYPE_INT8 Int_yytype_int8;Int_yytype_int8177,4351
typedef signed char Int_yytype_int8;Int_yytype_int8180,4488
typedef short int Int_yytype_int8;Int_yytype_int8182,4531
typedef YYTYPE_UINT16 Int_yytype_uint16;Int_yytype_uint16186,4595
typedef unsigned short int Int_yytype_uint16;Int_yytype_uint16188,4642
typedef YYTYPE_INT16 Int_yytype_int16;Int_yytype_int16192,4716
typedef short int Int_yytype_int16;Int_yytype_int16194,4761
#  define YYSIZE_T YYSIZE_T199,4844
#  define YYSIZE_T YYSIZE_T201,4899
#  define YYSIZE_T YYSIZE_T205,5105
#  define YYSIZE_T YYSIZE_T207,5138
#define YYSIZE_MAXIMUM YYSIZE_MAXIMUM211,5186
#   define YY_(YY_217,5356
#  define YY_(YY_221,5442
# define YYUSE(YYUSE227,5579
# define YYUSE(YYUSE229,5616
# define YYID(YYID234,5746
YYID (int Int_yyi)YYID239,5882
#    define YYSTACK_ALLOC YYSTACK_ALLOC257,6182
#    define YYSTACK_ALLOC YYSTACK_ALLOC261,6345
#    define alloca alloca264,6465
#    define YYSTACK_ALLOC YYSTACK_ALLOC266,6501
#      define EXIT_SUCCESS EXIT_SUCCESS271,6771
#  define YYSTACK_FREE(YYSTACK_FREE280,6921
#   define YYSTACK_ALLOC_MAXIMUM YYSTACK_ALLOC_MAXIMUM286,7318
#  define YYSTACK_ALLOC YYSTACK_ALLOC289,7400
#  define YYSTACK_FREE YYSTACK_FREE290,7433
#   define YYSTACK_ALLOC_MAXIMUM YYSTACK_ALLOC_MAXIMUM292,7495
#    define EXIT_SUCCESS EXIT_SUCCESS299,7785
#   define YYMALLOC YYMALLOC303,7850
#   define YYFREE YYFREE310,8120
union Int_yyallocInt_yyalloc325,8614
  Int_yytype_int16 Int_yyss_alloc;Int_yyss_alloc327,8634
  YYSTYPE Int_yyvs_alloc;Int_yyvs_alloc328,8669
# define YYSTACK_GAP_MAXIMUM YYSTACK_GAP_MAXIMUM332,8774
# define YYSTACK_BYTES(YYSTACK_BYTES336,8926
# define YYCOPY_NEEDED YYCOPY_NEEDED340,9045
# define YYSTACK_RELOCATE(YYSTACK_RELOCATE347,9354
#   define YYCOPY(YYCOPY365,9941
#   define YYCOPY(YYCOPY368,10048
#define YYFINAL YYFINAL381,10365
#define YYLAST YYLAST383,10425
#define YYNTOKENS YYNTOKENS386,10487
#define YYNNTS YYNNTS388,10550
#define YYNRULES YYNRULES390,10605
#define YYNSTATES YYNSTATES392,10663
#define YYUNDEFTOK YYUNDEFTOK395,10759
#define YYMAXUTOK YYMAXUTOK396,10781
#define YYTRANSLATE(YYTRANSLATE398,10806
static const Int_yytype_uint8 Int_yytranslate[] =Int_yytranslate402,10986
static const Int_yytype_uint8 Int_yyprhs[] =Int_yyprhs436,13101
static const Int_yytype_int8 Int_yyrhs[] =Int_yyrhs444,13364
static const Int_yytype_uint8 Int_yyrline[] =Int_yyrline455,13857
static const char *const Int_yytname[] =Int_yytname466,14255
static const Int_yytype_uint16 Int_yytoknum[] =Int_yytoknum479,14706
static const Int_yytype_uint8 Int_yyr1[] =Int_yyr1487,14938
static const Int_yytype_uint8 Int_yyr2[] =Int_yyr2495,15219
static const Int_yytype_uint8 Int_yydefact[] =Int_yydefact505,15603
static const Int_yytype_int8 Int_yydefgoto[] =Int_yydefgoto513,15896
#define YYPACT_NINF YYPACT_NINF521,16130
static const Int_yytype_int8 Int_yypact[] =Int_yypact522,16154
static const Int_yytype_int8 Int_yypgoto[] =Int_yypgoto530,16442
#define YYTABLE_NINF YYTABLE_NINF539,16786
static const Int_yytype_uint8 Int_yytable[] =Int_yytable540,16810
#define Int_yypact_value_is_default(Int_yypact_value_is_default547,17045
#define Int_yytable_value_is_error(Int_yytable_value_is_error550,17124
static const Int_yytype_int8 Int_yycheck[] =Int_yycheck553,17192
static const Int_yytype_uint8 Int_yystos[] =Int_yystos562,17523
#define Int_yyerrok	Int_yyerrok569,17785
#define Int_yyclearin	Int_yyclearin570,17828
#define YYEMPTY	YYEMPTY571,17873
#define YYEOF	YYEOF572,17895
#define YYACCEPT	YYACCEPT574,17913
#define YYABORT	YYABORT575,17951
#define YYERROR	YYERROR576,17988
#define YYFAIL	YYFAIL586,18395
#define YYRECOVERING(YYRECOVERING594,18719
#define YYBACKUP(YYBACKUP596,18764
#define YYTERROR	YYTERROR613,19173
#define YYERRCODE	YYERRCODE614,19192
#define YYRHSLOC(YYRHSLOC621,19398
# define YYLLOC_DEFAULT(YYLLOC_DEFAULT623,19457
# define YY_LOCATION_PRINT(YY_LOCATION_PRINT646,20208
# define YYLEX YYLEX653,20348
# define YYLEX YYLEX655,20393
#  define YYFPRINTF YYFPRINTF663,20555
# define YYDPRINTF(YYDPRINTF666,20592
# define YY_SYMBOL_PRINT(YY_SYMBOL_PRINT672,20703
Int_yy_symbol_value_print (FILE *Int_yyoutput, int Int_yytype, YYSTYPE const * const Int_yyvaluep)Int_yy_symbol_value_print692,21253
Int_yy_symbol_print (FILE *Int_yyoutput, int Int_yytype, YYSTYPE const * const Int_yyvaluep)Int_yy_symbol_print724,21997
Int_yy_stack_print (Int_yytype_int16 *Int_yybottom, Int_yytype_int16 *Int_yytop)Int_yy_stack_print750,22939
# define YY_STACK_PRINT(YY_STACK_PRINT767,23372
Int_yy_reduce_print (YYSTYPE *Int_yyvsp, int Int_yyrule)Int_yy_reduce_print781,23790
# define YY_REDUCE_PRINT(YY_REDUCE_PRINT805,24514
int Int_yydebug;Int_yydebug813,24755
# define YYDPRINTF(YYDPRINTF815,24793
# define YY_SYMBOL_PRINT(YY_SYMBOL_PRINT816,24818
# define YY_STACK_PRINT(YY_STACK_PRINT817,24873
# define YY_REDUCE_PRINT(YY_REDUCE_PRINT818,24910
# define YYINITDEPTH YYINITDEPTH824,25044
# define YYMAXDEPTH YYMAXDEPTH835,25400
#   define Int_yystrlen Int_yystrlen843,25523
Int_yystrlen (const char *Int_yystr)Int_yystrlen849,25711
#   define Int_yystpcpy Int_yystpcpy866,26054
Int_yystpcpy (char *Int_yydest, const char *Int_yysrc)Int_yystpcpy873,26294
Int_yytnamerr (char *Int_yyres, const char *Int_yystr)Int_yytnamerr901,27107
Int_yysyntax_error (YYSIZE_T *Int_yymsg_alloc, char **Int_yymsg,Int_yysyntax_error949,28236
# define YYCASE_(YYCASE_1028,32081
# undef YYCASE_YYCASE_1038,32636
Int_yydestruct (const char *Int_yymsg, int Int_yytype, YYSTYPE *Int_yyvaluep)Int_yydestruct1085,33982
int Int_yychar;Int_yychar1126,34799
YYSTYPE Int_yylval;Int_yylval1129,34867
int Int_yynerrs;Int_yynerrs1132,34927
Int_yyparse (void *YYPARSE_PARAM)Int_yyparse1143,35116
#define YYPOPSTACK(YYPOPSTACK1199,36493

backend/fmgrtab.c,310
# define MAXINT	MAXINT32,1082
static FmgrCall fmgr_builtins[] = {fmgr_builtins43,1287
static int fmgr_nbuiltins = (sizeof(fmgr_builtins) / sizeof(FmgrCall)) - 1;fmgr_nbuiltins54,1529
FmgrCall *fmgr_isbuiltin(Oid id)fmgr_isbuiltin56,1606
func_ptr fmgr_lookupByName(char *name)fmgr_lookupByName78,2040

backend/nodes/nodes.c,46
newNode(Size size, NodeTag tag){newNode5,55

backend/nodes/execnodes.h,4398
#define EXECNODES_HEXECNODES_H2,20
typedef struct JunkFilter {JunkFilter9,176
  NodeTag          type;type10,204
  List             *jf_targetList;jf_targetList11,229
  int              jf_length;jf_length12,264
  TupleDesc        jf_tupType;jf_tupType13,294
  List             *jf_cleanTargetList;jf_cleanTargetList14,325
  int              jf_cleanLength;jf_cleanLength15,365
  TupleDesc        jf_cleanTupType;jf_cleanTupType16,400
  AttrNumber       *jf_cleanMap;jf_cleanMap17,436
} JunkFilter;JunkFilter18,469
typedef struct IndexInfo {IndexInfo20,484
  NodeTag           type;type21,511
  int               ii_NumKeyAttributes;ii_NumKeyAttributes22,537
  AttrNumber        *ii_KeyAttributeNumbers;ii_KeyAttributeNumbers23,578
  FuncIndexInfoPtr  ii_FuncIndexInfo;ii_FuncIndexInfo24,623
  Node              *ii_Predicate;ii_Predicate25,661
} IndexInfo;IndexInfo26,696
typedef struct RelationInfo {RelationInfo28,710
  NodeTag      type;type29,740
  Index        ri_RangeTableIndex;ri_RangeTableIndex30,761
  Relation     ri_RelationDesc;ri_RelationDesc31,796
  int          ri_NumIndeces;ri_NumIndeces32,828
  RelationPtr  ri_IndexRelationDescs;ri_IndexRelationDescs33,858
  IndexInfo    **ri_IndexRelationInfo;ri_IndexRelationInfo34,896
} RelationInfo;RelationInfo35,935
typedef struct EState {EState37,952
  NodeTag           type;type38,976
  ScanDirection     es_direction;es_direction39,1002
  List              *es_range_table;es_range_table40,1036
  RelationInfo      *es_result_relation_info;es_result_relation_info41,1073
  Relation          es_into_relation_descriptor;es_into_relation_descriptor42,1119
  ParamListInfo     es_param_list_info;es_param_list_info43,1168
  int               es_BaseId;es_BaseId44,1208
  TupleTable        es_tupleTable;es_tupleTable45,1239
  JunkFilter        *es_junkFilter;es_junkFilter46,1274
  int               *es_refcount;es_refcount47,1310
} EState;EState48,1344
typedef struct ExprContext {ExprContext50,1355
  NodeTag           type;type51,1384
  TupleTableSlot    *ecxt_scantuple;ecxt_scantuple52,1410
  TupleTableSlot    *ecxt_innertuple;ecxt_innertuple53,1447
  TupleTableSlot    *ecxt_outertuple;ecxt_outertuple54,1485
  Relation          ecxt_relation;ecxt_relation55,1523
  Index             ecxt_relid;ecxt_relid56,1558
  ParamListInfo     ecxt_param_list_info;ecxt_param_list_info57,1590
  List              *ecxt_range_table;ecxt_range_table58,1632
  Datum             *ecxt_values;ecxt_values59,1671
  char              *ecxt_nulls;ecxt_nulls60,1705
} ExprContext;ExprContext61,1738
typedef struct ProjectionInfo {ProjectionInfo63,1754
  NodeTag            type;type64,1786
  List               *pi_targetlist;pi_targetlist65,1813
  int                pl_len;pl_len66,1850
  Datum              *pi_tupValue;pi_tupValue67,1879
  ExprContext        *pi_exprContext;pi_exprContext68,1914
  TupleTableSlog     *pi_slot;pi_slot69,1952
} ProjectionInfo;ProjectionInfo70,1983
typedef struct CommonState {CommonState72,2002
  NodeTag        type;type73,2031
  int            cs_base_id;cs_base_id74,2054
  TupleTableSlot *cs_OuterTupleSlot;cs_OuterTupleSlot75,2083
  TupleTableSlot *cs_ResultTupleSlot;cs_ResultTupleSlot76,2120
  ExprContext    *cs_ExprContext;cs_ExprContext77,2158
  ProjectionInfo *cs_ProjInfo;cs_ProjInfo78,2192
  bool           cs_TupFromTlist;cs_TupFromTlist79,2223
} CommonState;CommonState80,2257
typedef struct AppendState {AppendState82,2273
  CommonState cstate;cstate83,2302
  int         as_whichplan;as_whichplan84,2324
  int         as_nplans;as_nplans85,2352
  bool        *as_initialized;as_initialized86,2377
  List        *as_rentries;as_rentries87,2408
  List        *as_result_relation_info_list;as_result_relation_info_list88,2436
  List        *as_junkFilter_list;as_junkFilter_list89,2481
} AppendState;AppendState90,2516
typedef CommonState JoinState;JoinState92,2532
typedef struct NestLoopState {NestLoopState94,2564
  JoinState jstate;jstate95,2595
  bool      nl_PortalFlag;nl_PortalFlag96,2615
} NestLoopState;NestLoopState97,2642
typedef struct HashJoinState {HashJoinState99,2660
  JoinState             jstate;jstate100,2691
  HashJoinTable         hj_HashTable;hj_HashTable101,2723
} HashJoinState;HashJoinState108,2780

backend/nodes/memnodes.h,827
#define MEMNODES_HMEMNODES_H2,19
typedef struct MemoryContextMethodsData{MemoryContextMethodsData7,107
  Pointer (*alloc)();alloc8,148
  void    (*free_p)();free_p9,170
  Pointer (*realloc)();realloc10,193
  char*   (*getName)();getName11,217
  void    (*dump)();dump12,241
} *MemoryContextMethods;MemoryContextMethods13,262
typedef struct MemoryContext{MemoryContext15,288
  NodeTag              type;type16,318
  MemoryContextMethods method;method17,347
} *MemoryContext;MemoryContext18,378
typedef struct GlobalMemory{GlobalMemory20,397
  NodeTag              type;type21,426
  MemoryContextMethods method;method22,455
  AllocSetData         setData;setData23,486
  char                 *name;name24,518
  OrderedElemData      elemData;elemData25,548
} *GlobalMemory;GlobalMemory26,581

backend/nodes/nodes.h,4552
#define NODES_HNODES_H2,16
typedef float Cost;Cost5,48
typedef enum NodeTag{NodeTag7,69
  T_Invalid = 0,T_Invalid8,91
  T_Plan = 10,T_Plan10,109
  T_Existential,T_Existential11,124
  T_Result,T_Result12,141
  T_Append,T_Append13,153
  T_Scan,T_Scan14,165
  T_SeqScan,T_SeqScan15,175
  T_IndexScan,T_IndexScan16,188
  T_Join,T_Join17,203
  T_NestLoop,T_NestLoop18,213
  T_MergeJoin,T_MergeJoin19,227
  T_HashJoin,T_HashJoin20,242
  T_Temp,T_Temp21,256
  T_Material,T_Material22,266
  T_Sort,T_Sort23,280
  T_Agg,T_Agg24,290
  T_Unique,T_Unique25,299
  T_Hash,T_Hash26,311
  T_Resdom = 100,T_Resdom28,322
  T_Fjoin,T_Fjoin29,340
  T_Expr,T_Expr30,351
  T_Var,T_Var31,361
  T_Oper,T_Oper32,370
  T_Const,T_Const33,380
  T_Param,T_Param34,391
  T_Aggreg,T_Aggreg35,402
  T_Func,T_Func36,414
  T_Array,T_Array37,424
  T_ArrayRef,T_ArrayRef38,435
  T_Rel = 200,T_Rel40,450
  T_Path,T_Path41,465
  T_IndexPath,T_IndexPath42,475
  T_JoinPath,T_JoinPath43,490
  T_MergePath,T_MergePath44,504
  T_HashPath,T_HashPath45,519
  T_OrderKey,T_OrderKey46,533
  T_JoinKey,T_JoinKey47,547
  T_MergeOrder,T_MergeOrder48,560
  T_CInfo,T_CInfo49,576
  T_JoinMethod,T_JoinMethod50,587
  T_HInfo,T_HInfo51,603
  T_MInfo,T_MInfo52,614
  T_JInfo,T_JInfo53,625
  T_Iter,T_Iter54,636
  T_Stream,T_Stream55,646
  T_IndexInfo = 300,T_IndexInfo57,659
  T_RelationInfo,T_RelationInfo58,680
  T_TupleCount,T_TupleCount59,698
  T_TupleTableSlot,T_TupleTableSlot60,714
  T_ExprContext,T_ExprContext61,734
  T_projectionInfo,T_projectionInfo62,751
  T_JunkFilter,T_JunkFilter63,771
  T_EState,T_EState64,787
  T_MemoryContext = 400,T_MemoryContext66,800
  T_GlobalMemory,T_GlobalMemory67,825
  T_Value = 500,T_Value69,844
  T_List,T_List70,861
  T_Integer,T_Integer71,871
  T_Float,T_Float72,884
  T_String,T_String73,895
  T_Null,T_Null74,907
  T_Query = 600,T_Query75,917
  T_AppendStmt,T_AppendStmt76,934
  T_DeleteStmt,T_DeleteStmt77,950
  T_ReplaceStmt,T_ReplaceStmt78,966
  T_CursorStmt,T_CursorStmt79,983
  T_RetrieveStmt,T_RetrieveStmt80,999
  T_AddAttrStmt,T_AddAttrStmt81,1017
  T_AggregateStmt,T_AggregateStmt82,1034
  T_ChangeACLStmt,T_ChangeACLStmt83,1053
  T_ClosePortalStmt,T_ClosePortalStmt84,1072
  T_ClusterStmt,T_ClusterStmt85,1093
  T_CopyStmt,T_CopyStmt86,1110
  T_CreateStmt,T_CreateStmt87,1124
  T_VersionStmt,T_VersionStmt88,1140
  T_DefineStmt,T_DefineStmt89,1157
  T_DestroyStmt,T_DestroyStmt90,1173
  T_ExtendStmt,T_ExtendStmt91,1190
  T_FetchStmt,T_FetchStmt92,1206
  T_IndexStmt,T_IndexStmt93,1221
  T_MoveStmt,T_MoveStmt94,1236
  T_ProcedureStmt,T_ProcedureStmt95,1250
  T_PurgeStmt,T_PurgeStmt96,1269
  T_RecipeStmt,T_RecipeStmt97,1284
  T_RemoveFuncStmt,T_RemoveFuncStmt98,1300
  T_RemoveOperStmt,T_RemoveOperStmt99,1320
  T_RemoveStmt,T_RemoveStmt100,1340
  T_RenameStmt,T_RenameStmt101,1356
  T_RuleStmt,T_RuleStmt102,1372
  T_NotifyStmt,T_NotifyStmt103,1386
  T_ListenStmt,T_ListenStmt104,1402
  T_TransactionStmt,T_TransactionStmt105,1418
  T_ViewStmt,T_ViewStmt106,1439
  T_LoadStmt,T_LoadStmt107,1453
  T_CreatedStmt,T_CreatedStmt108,1467
  T_DestroydbStmt,T_DestroydbStmt109,1484
  T_VecuumStmt,T_VecuumStmt110,1503
  T_ExplainStmt,T_ExplainStmt111,1519
  T_A_Expr = 700,T_A_Expr113,1537
  T_Attr,T_Attr114,1555
  T_A_Const,T_A_Const115,1565
  T_ParamNo,T_ParamNo116,1578
  T_Ident,T_Ident117,1591
  T_FuncCall,T_FuncCall118,1602
  T_A_Indices,T_A_Indices119,1616
  T_ResTarget,T_ResTarget120,1631
  T_ParamString,T_ParamString121,1646
  T_TimeRange,T_TimeRange122,1663
  T_RelExpr,T_RelExpr123,1678
  T_SortBy,T_SortBy124,1691
  T_RangeVar,T_RangeVar125,1703
  T_TypeName,T_TypeName126,1717
  T_IndexElem,T_IndexElem127,1731
  T_ColumnDef,T_ColumnDef128,1746
  T_DefElem,T_DefElem129,1761
  T_TargetEntry,T_TargetEntry130,1774
  T_RangeTblEntry,T_RangeTblEntry131,1791
  T_SortClause,T_SortClause132,1810
  T_GroupClauseT_GroupClause133,1826
} NodeTag;NodeTag134,1842
#define makeNode(makeNode136,1854
typedef struct Node {Node138,1925
  NodeTag type;type139,1947
} Node;Node140,1963
typedef enum CmdType {CmdType144,2019
  CMD_UNKNOWN,CMD_UNKNOWN145,2042
  CMD_SELECT,CMD_SELECT146,2057
  CMD_UPDATE,CMD_UPDATE147,2071
  CMD_INSERT,CMD_INSERT148,2085
  CMD_DELETE,CMD_DELETE149,2099
  CMD_NOTIFY,CMD_NOTIFY150,2113
  CMD_UTILITYCMD_UTILITY151,2127
} CmdType;CmdType152,2141

backend/nodes/readfuncs.c,1712
parsePlanString(){parsePlanString56,1751
_readQuery(){_readQuery157,5305
_readIter(){_readIter207,6571
_readHInfo(){_readHInfo221,6782
_readJInfo(){_readJInfo243,7191
toIntList(List *list){toIntList275,7819
_readJoinMethod(){_readJoinMethod285,7958
_readCInfo(){_readCInfo302,8271
_readMergeOrder(){_readMergeOrder341,9068
_readJoinKey(){_readJoinKey376,9785
_readOrderKey(){_readOrderKey393,10083
_readHashPath(){_readHashPath414,10465
_readMergePath(){_readMergePath469,11787
_readJoinPath(){_readJoinPath525,13115
_readIndexPath(){_readIndexPath570,14144
_readPath(){_readPath598,14768
_readRangeTblEntry(){_readRangeTblEntry620,15200
_readTargetEntry(){_readTargetEntry664,16184
_readRel(){_readRel681,16498
_readEState(){_readEState747,18046
_readParam(){_readParam773,18546
_readOper(){_readOper807,19255
_readFunc(){_readFunc832,19751
_readConst(){_readConst876,20699
_readVar(){_readVar921,21607
_readArray(){_readArray952,22279
_readArrayRef(){_readArrayRef987,23114
_readExpr(){_readExpr1026,24047
_readResdom(){_readResdom1061,24872
_readHash(){_readHash1110,25956
_readUnique(){_readUnique1138,26509
_readAgg(){_readAgg1159,26911
_readSort(){_readSort1175,27181
_readTemp(){_readTemp1196,27559
_readIndexScan(){_readIndexScan1217,27939
_readSeqScan(){_readSeqScan1236,28293
_readScan(){_readScan1249,28478
_readHashJoin(){_readHashJoin1262,28642
_readMergeJoin(){_readMergeJoin1298,29428
_readNestLoop(){_readNestLoop1318,29811
_readJoin(){_readJoin1329,29960
_readAppend(){_readAppend1340,30092
_readExistential(){_readExistential1363,30541
_readResult(){_readResult1371,30698
_readPlan(){_readPlan1387,30957

backend/nodes/list.c,162
lcons(void *datum, List *list){lcons5,56
makeString(char *str){makeString13,180
makeInteger(long i){makeInteger21,303
makeFloat(double d){makeFloat29,426

backend/nodes/relation.h,4840
#define RELATION_HRELATION_H2,19
typedef List *Relid;Relid8,146
typedef struct Iter{Iter10,168
  NodeTag type;type11,189
  Node    *iterexpr;iterexpr12,205
  Oid     itertype;itertype13,226
} Iter;Iter14,246
typedef struct JoinMethod {JoinMethod16,255
  NodeTag type;type17,283
  List    *jmkeys;jmkeys18,299
  List    *clauses;clauses19,318
} JoinMethod;JoinMethod20,338
typedef struct HInfo{HInfo22,353
  JoinMethod jmethod;jmethod23,375
  Oid        hashop;hashop24,397
} HInfo;HInfo25,418
typedef struct JInfo {JInfo27,428
  NodeTag type;type28,451
  List    *otherrels;otherrels29,467
  List    *jinfoclauseinfo;jinfoclauseinfo30,489
  bool    mergesortable;mergesortable31,517
  bool    hashjoinable;hashjoinable32,542
  bool    inactive;inactive33,566
} JInfo;JInfo34,586
typedef struct Rel {Rel36,596
  NodeTag          type;type37,617
  Relid            relids;relids38,642
  bool             indexed;indexed39,669
  int              pages;pages40,697
  int              tuples;tuples41,723
  int              size;size42,750
  int              width;width43,775
  List             *targetlist;targetlist45,802
  List             *pathlist;pathlist46,834
  struct Path      *unorderedpath;unorderedpath47,864
  struct Path      *cheapestpath;cheapestpath48,899
  bool             pruneable;pruneable49,933
  Oid              *classlist;classlist50,963
  int              *indexkeys;indexkeys51,994
  Oid              relam;relam52,1025
  Oid              indproc;indproc53,1051
  List             *indpred;indpred54,1079
  Oid              *ordering;ordering55,1108
  List             *clauseinfo;clauseinfo56,1138
  List             *joininfo;joininfo57,1170
  List             *innerjoin;innerjoin58,1200
  List             *superrels;superrels59,1231
} Rel;Rel60,1262
typedef struct Path {Path62,1270
  NodeTag   type;type63,1292
  Rel       *parent;parent64,1310
  Cost      *path_cost;path_cost65,1331
  NodeTag   pathtype;pathtype66,1355
  PathOrder p_ordering;p_ordering67,1377
  List      *keys;keys68,1401
  Cost      outerjoincost;outerjoincost69,1420
  Relid     joinid;joinid70,1447
  List      *locclauseinfo;locclauseinfo71,1467
} Path;Path72,1495
typedef struct IndexPath {IndexPath74,1504
  Path    path;path75,1531
  List    *indexid;indexid76,1547
  List    *indexqual;indexqual77,1567
} IndexPath;IndexPath78,1589
typedef struct JoinPath {JoinPath80,1603
  Path      path;path81,1629
  List      *pathclauseinfo;pathclauseinfo82,1647
  Path      *outerjoinpath;outerjoinpath83,1676
  Path      *innerjoinpath;innerjoinpath84,1704
} JoinPath;JoinPath85,1732
typedef struct MergePath {MergePath87,1745
  JoinPath     jpath;jpath88,1772
  List         *path_mergeclauses;path_mergeclauses89,1794
  List         *outersortkeys;outersortkeys90,1829
  List         *innersortkeys;innersortkeys91,1860
} MergePath;MergePath92,1891
typedef struct HashPath {HashPath94,1905
  JoinPath      jpath;jpath95,1931
  List          *path_hashclauses;path_hashclauses96,1954
  List          *outerhashkeys;outerhashkeys97,1989
  List          *innerhashkeys;innerhashkeys98,2021
} HashPath;HashPath99,2053
typedef struct OrderKey {OrderKey101,2066
  NodeTag    type;type102,2092
  int        attribute_number;attribute_number103,2111
  Index      array_index;array_index104,2142
} OrderKey;OrderKey105,2168
typedef struct JoinKey {JoinKey107,2181
  NodeTag    type;type108,2206
  Var        *outer;outer109,2225
  Var        *inner;inner110,2246
} JoinKey;JoinKey111,2267
typedef struct MergeOrder {MergeOrder113,2279
  NodeTag   type;type114,2307
  Oid       join_operator;join_operator115,2325
  Oid       left_operator;left_operator116,2352
  Oid       right_operator;right_operator117,2379
  Oid       left_type;left_type118,2407
  Oid       right_type;right_type119,2430
} MergeOrder;MergeOrder120,2454
typedef struct CInfo {CInfo122,2469
  NodeTag    type;type123,2492
  Expr       *clause;clause124,2511
  Cost       selectivity;selectivity125,2533
  bool       notclause;notclause126,2559
  List       *indexids;indexids127,2583
  MergeOrder *mergesortorder;mergesortorder128,2607
  Oid        hashjoinoperator;hashjoinoperator129,2637
  Relid      cinfojoinid;cinfojoinid130,2668
} CInfo;CInfo131,2694
typedef enum OrderType {OrderType133,2704
  MERGE_ORDER, SORTOP_ORDERMERGE_ORDER134,2729
  MERGE_ORDER, SORTOP_ORDERSORTOP_ORDER134,2729
} OrderType;OrderType135,2757
typedef struct PathOrder {PathOrder137,2771
  OrderType      ordtype;ordtype138,2798
    Oid         *sortop;sortop140,2834
    MergeOrder  *merge;merge141,2859
  } ord;ord142,2883
} PathOrder;PathOrder144,2893

backend/nodes/read.c,375
#define RIGHT_PAREN RIGHT_PAREN9,158
#define LEFT_PAREN LEFT_PAREN10,192
#define PLAN_SYM PLAN_SYM11,226
#define AT_SYMBOL AT_SYMBOL12,260
#define ATOM_TOKEN ATOM_TOKEN13,294
StringToNode(char *str){StringToNode18,392
lsptok(char *string,lsptok28,517
nodeRead(bool read_car_only){nodeRead71,1477
nodeTokenType(char *token, int length){nodeTokenType170,3723

backend/nodes/params.h,452
#define PARAMS_HPARAMS_H2,17
typedef struct ParamListInfoData {ParamListInfoData6,77
  int        kind;kind7,112
  char       *name;name8,131
  AttrNumber id;id9,151
  Oid        type;type10,168
  Size       length;length11,187
  bool       isnull;isnull12,208
  bool       byval;byval13,229
  Datum      value;value14,249
} ParamListInfoData;ParamListInfoData15,269
typedef ParamListInfoData *ParamListInfo;ParamListInfo18,292

backend/nodes/parsenodes.h,1944
#define PARSENODES_HPARSENODES_H2,21
typedef struct Query {Query7,124
  NodeTag type;type8,147
  CmdType commandType;commandType9,163
  Node    *utilityStmt;utilityStmt10,186
  int     resultRelation;resultRelation11,210
  char    *into;into12,236
  bool    isPortal;isPortal13,253
  bool    isBinary;isBinary14,273
  char    *uniqueFlag;uniqueFlag15,293
  List    *sortClause;sortClause16,316
  List    *rtable;rtable17,339
  List    *targetList;targetList18,358
  Node    *qual;qual19,381
  List    *groupClause;groupClause20,398
  Node    *havingQual;havingQual21,422
  int     qry_numAgg;qry_numAgg22,445
  Aggreg  **qry_aggs;qry_aggs23,467
  List    *base_relation_list_;base_relation_list_24,489
  List    *join_relation_list_;join_relation_list_25,521
  bool    query_is_archival_;query_is_archival_26,553
} Query;Query27,583
typedef struct NotifyStmt {NotifyStmt29,593
  NodeTag type;type30,621
  char    *relname;relname31,637
} NotifyStmt;NotifyStmt32,657
typedef struct TimeRange {TimeRange34,672
  NodeTag    type;type35,699
  char       *startDate;startDate36,718
  char       *endDate;endDate37,743
} TimeRange;TimeRange38,766
typedef struct RangeTblEntry {RangeTblEntry40,780
  NodeTag             type;type41,811
  char                *relname;relname42,839
  TimeRange           *timeRange;timeRange43,871
  char                *refname;refname44,905
  Oid                 relid;relid46,938
  bool                inh;inh47,967
  bool                archive;archive48,994
  bool                infromCl;infromCl49,1025
  TimeQual            timeQual;timeQual50,1057
} RangeTblEntry;RangeTblEntry51,1089
typedef struct TargetEntry {TargetEntry53,1107
  NodeTag         type;type54,1136
  Resdom          *resdom;resdom55,1160
  Fjoin           *fjoin;fjoin56,1187
  Node            *expr;expr57,1213
} TargetEntry;TargetEntry58,1238

backend/nodes/plannodes.h,4207
#define PLANNODES_HPLANNODES_H2,20
typedef struct Plan {Plan7,124
  NodeTag      type;type8,146
  Cost         cost;cost9,167
  int          plan_size;plan_size10,188
  int          plan_width;plan_width11,214
  int          plan_tupperpage;plan_tupperpage12,241
  EState       *state;state13,273
  List         *targetList;targetList15,297
  List         *qual;qual16,325
  struct Plan  *lefttree;lefttree17,347
  struct Plan  *righttree;righttree18,373
} Plan;Plan19,400
typedef struct ResultState {ResultState21,409
  CommonState   cstate;cstate22,438
  int           rs_done;rs_done23,462
} ResultState;ResultState24,487
typedef struct Result {Result26,503
  Plan        plan;plan27,527
  Node        *resconstantqual;resconstantqual28,547
  ResultState *resstate;resstate29,579
} Result;Result30,604
typedef Plan Existential;Existential32,615
typedef struct Append {Append34,642
  Plan        plan;plan35,666
  List        *unionplans;unionplans36,686
  Index       unionrelid;unionrelid37,713
  List        *unionrtentries;unionrtentries38,739
  AppendState *unionstate;unionstate39,770
} Append;Append40,797
typedef Plan Join;Join42,808
typedef struct NestLoop {NestLoop44,828
  Join          join;join45,854
  NestLoopState *nlstate;nlstate46,876
} NestLoop;NestLoop47,902
typedef struct MergeJoin {MergeJoin49,915
  Join           join;join50,942
  List           *mergeclauses;mergeclauses51,965
  Oid            mergesortop;mergesortop52,997
  Oid            *mergerightorder;mergerightorder53,1027
  Oid            *mergeleftorder;mergeleftorder54,1062
  MergeJoinState *mergestate;mergestate55,1096
} MergeJoin;MergeJoin56,1126
typedef struct HashJoin {HashJoin58,1140
  Join          join;join59,1166
  List          *hashclauses;hashclauses60,1188
  Oid           hashjoinop;hashjoinop61,1218
  HashJoinState *hashjoinstate;hashjoinstate62,1246
  HashJoinTable hashjointable;hashjointable63,1278
  IpcMemoryKey  hashjointablekey;hashjointablekey64,1309
  int           hashjointablesize;hashjointablesize65,1343
  bool          hashdone;hashdone66,1378
} HashJoin;HashJoin67,1404
typedef struct Scan {Scan69,1417
  Plan            plan;plan70,1439
  Index           scanrelid;scanrelid71,1463
  CommanScanState *scanstate;scanstate72,1492
} Scan;Scan73,1522
typedef Scan SeqScan;SeqScan75,1531
typedef struct IndexScan {IndexScan77,1554
  Scan            scan;scan78,1581
  List            *indxid;indxid79,1605
  List            *indxqual;indxqual80,1632
  IndexScanState  *indxstate;indxstate81,1661
} IndexScan;IndexScan82,1691
typedef struct Temp {Temp84,1705
  Plan       plan;plan85,1727
  Oid        tempid;tempid86,1746
  int        keycount;keycount87,1767
} Temp;Temp88,1790
typedef struct Sort {Sort90,1799
  Plan      plan;plan91,1821
  Oid       tempid;tempid92,1839
  int       keycount;keycount93,1859
  SortState *sortstate;sortstate94,1881
} Sort;Sort95,1905
typedef struct Agg {Agg97,1914
  Plan     plan;plan98,1935
  int      numAgg;numAgg99,1952
  Aggreg   **aggs;aggs100,1971
  AggState *aggstate;aggstate101,1990
} Agg;Agg102,2012
typedef struct Unique {Unique104,2020
  Plan           plan;plan105,2044
  Oid            tempid;tempid106,2067
  int            keycount;keycount107,2092
  char           *uniqueAttr;uniqueAttr108,2119
  AttrNumber     uniqueAttrNum;uniqueAttrNum110,2150
  UniqueState    *uniquestate;uniquestate112,2183
} Unique;Unique113,2214
typedef struct Var {Var115,2225
  NodeTag    type;type116,2246
  Index      varno;varno117,2265
  AttrNumber varattno;varattno118,2285
  Oid        vartype;vartype119,2308
  Index      varnoold;varnoold120,2330
  AttrNumber varoattno;varoattno121,2353
} Var;Var122,2377
typedef struct Hash {Hash124,2385
  Plan           plan;plan125,2407
  Var            *hashkey;hashkey126,2430
  HashState      *hashstate;hashstate127,2457
  HashJoinTable  hashtable;hashtable128,2486
  IpcMemoryKey   hashtablekey;hashtablekey129,2514
  int            hashtablesize;hashtablesize130,2545
} Hash;Hash131,2577

backend/nodes/pg_list.h,618
#define PG_LIST_HPG_LIST_H2,18
typedef struct List {List6,63
  NodeTag     type;type7,85
  void        *elem;elem8,105
  struct List *next;next9,126
} List;List10,147
#define NIL NIL12,156
#define lfirst(lfirst14,184
#define lnext(lnext15,214
typedef struct Value {Value17,245
  NodeTag type;type18,268
  union ValueUnion {ValueUnion19,284
    char   *str;str20,305
    long   ival;ival21,322
    double dval;dval22,339
  } val;val23,356
} Value;Value24,365
#define intVal(intVal26,375
#define floatVal(floatVal27,420
#define strVal(strVal28,465
#define foreach(foreach30,510

backend/nodes/readfuncs.h,37
#define READFUNCS_HREADFUNCS_H2,20

backend/nodes/primnodes.h,3981
#define PRIMNODES_HPRIMNODES_H2,20
typedef enum OpType {OpType7,116
  OP_EXPR, FUNC_EXPR, OR_EXPR, AND_EXPR, NOT_EXPROP_EXPR8,138
  OP_EXPR, FUNC_EXPR, OR_EXPR, AND_EXPR, NOT_EXPRFUNC_EXPR8,138
  OP_EXPR, FUNC_EXPR, OR_EXPR, AND_EXPR, NOT_EXPROR_EXPR8,138
  OP_EXPR, FUNC_EXPR, OR_EXPR, AND_EXPR, NOT_EXPRAND_EXPR8,138
  OP_EXPR, FUNC_EXPR, OR_EXPR, AND_EXPR, NOT_EXPRNOT_EXPR8,138
} OpType;OpType9,188
typedef struct Aggreg {Aggreg11,199
  NodeTag type;type12,223
  char    *aggname;aggname13,239
  Oid     basetype;basetype14,259
  Oid     aggtype;aggtype15,279
  Node    *target;target16,298
  int     aggno;aggno17,317
} Aggreg;Aggreg18,334
typedef struct Resdom {Resdom20,345
  NodeTag      type;type21,369
  AttrNumber   resno;resno22,390
  Oid          restype;restype23,412
  int          reslen;reslen24,436
  char         *resname;resname25,459
  Index        reskey;reskey26,484
  Oid          reskeyop;reskeyop27,507
  int          resjunk;resjunk28,532
} Resdom;Resdom29,556
typedef struct Expr {Expr31,567
  NodeTag        type;type32,589
  Oid            typeOid;typeOid33,612
  OpType         opType;opType34,638
  Node           *oper;oper35,663
  List           *args;args36,687
} Expr;Expr37,711
typedef struct ArrayRef {ArrayRef39,720
  NodeTag      type;type40,746
  int          refattrlength;refattrlength41,767
  int          refelemlength;refelemlength42,797
  Oid          refelemtype;refelemtype43,827
  bool         refelembyval;refelembyval44,855
  List         *refupperindexpr;refupperindexpr45,884
  List         *reflowerindexpr;reflowerindexpr46,917
  Node         *refexpr;refexpr47,950
  Node         *refassgnexpr;refassgnexpr48,975
} ArrayRef;ArrayRef49,1005
typedef struct Array {Array51,1018
  NodeTag     type;type52,1041
  Oid         arrayelemtype;arrayelemtype53,1061
  int         arrayelemlength;arrayelemlength54,1090
  bool        arrayelembyval;arrayelembyval55,1121
  int         arrayndim;arrayndim56,1151
  IntArray    arraylow;arraylow57,1176
  IntArray    arrayhigh;arrayhigh58,1200
  int         arraylen;arraylen59,1225
} Array;Array60,1249
typedef struct Const {Const62,1259
  NodeTag   type;type63,1282
  Oid       consttype;consttype64,1300
  Size      constlen;constlen65,1323
  Datum     constvalue;constvalue66,1345
  bool      constisnull;constisnull67,1369
  bool      constbyval;constbyval68,1394
  bool      constisset;constisset69,1418
} Const;Const70,1442
typedef struct Func {Func72,1452
  NodeTag          type;type73,1474
  Oid              funcid;funcid74,1499
  Oid              functype;functype75,1526
  bool             funcisindex;funcisindex76,1555
  int              funcsize;funcsize77,1587
  FunctionCachePtr func_fcache;func_fcache78,1616
  List             *func_tlist;func_tlist79,1648
  List             *func_planlist;func_planlist80,1680
} Func;Func81,1715
typedef struct Oper {Oper83,1724
  NodeTag          type;type84,1746
  Oid              opno;opno85,1771
  Oid              opid;opid86,1796
  Oid              opresulttype;opresulttype87,1821
  int              opsize;opsize88,1854
  FunctionCachePtr op_fcache;op_fcache89,1881
} Oper;Oper90,1911
typedef struct Param {Param92,1920
  NodeTag         type;type93,1943
  int             paramkind;paramkind94,1967
  AttrNumber      paramid;paramid95,1996
  char            *paramname;paramname96,2023
  Oid             paramtype;paramtype97,2053
  List            *param_tlist;param_tlist98,2082
} Param;Param99,2114
typedef struct Fjoin {Fjoin101,2124
  NodeTag     type;type102,2147
  bool        fj_initialized;fj_initialized103,2167
  int         fj_nNodes;fj_nNodes104,2197
  List        *fj_innerNode;fj_innerNode105,2222
  DatumPtr    fj_results;fj_results106,2251
  BoolPtr     fj_alwaysDone;fj_alwaysDone107,2277
} Fjoin;Fjoin108,2306

backend/y.tab.h,1007
# define YYTOKENTYPEYYTOKENTYPE36,1566
   enum yytokentype {yytokentype39,1690
     ID = 258,ID40,1712
     OPEN = 259,OPEN41,1727
     XCLOSE = 260,XCLOSE42,1744
     XCREATE = 261,XCREATE43,1763
     COMMA = 262,COMMA44,1783
     EQUALS = 263,EQUALS45,1801
     LPAREN = 264,LPAREN46,1820
     RPAREN = 265,RPAREN47,1839
     XBOOTSTRAP = 266,XBOOTSTRAP48,1858
     low = 267,low49,1881
     high = 268high50,1897
#define ID ID54,1941
#define OPEN OPEN55,1956
#define XCLOSE XCLOSE56,1973
#define XCREATE XCREATE57,1992
#define COMMA COMMA58,2012
#define EQUALS EQUALS59,2030
#define LPAREN LPAREN60,2049
#define RPAREN RPAREN61,2068
#define XBOOTSTRAP XBOOTSTRAP62,2087
#define low low63,2110
#define high high64,2126
typedef union YYSTYPEYYSTYPE70,2202
  int ival;ival76,2336
} YYSTYPE;YYSTYPE82,2397
# define YYSTYPE_IS_TRIVIAL YYSTYPE_IS_TRIVIAL83,2408
# define yystype yystype84,2438
# define YYSTYPE_IS_DECLARED YYSTYPE_IS_DECLARED85,2500

backend/storage/itemptr.h,264
#define ITEMPTR_HITEMPTR_H2,18
typedef struct ItemPointerData{ItemPointerData6,89
  BlockIdData  ip_blkid;ip_blkid7,121
  OffsetNumber ip_posid;ip_posid8,146
} ItemPointerData;ItemPointerData9,171
typedef ItemPointerData *ItemPointer;ItemPointer11,191

backend/storage/lmgr/lmgr.c,451
#define LOCKDEBUGALL_30LOCKDEBUGALL_309,180
#define LOCKDEBUG_40LOCKDEBUG_4010,204
#define ReadRelationLock ReadRelationLock12,226
RelationSetLockForDescriptorOpen(Relation relation){RelationSetLockForDescriptorOpen15,264
RelationInitLockInfo(Relation relation){RelationInitLockInfo24,418
RelationUnsetLockForRead(Relation relation){RelationUnsetLockForRead74,1995
RelationSetLockForRead(Relation relation){RelationSetLockForRead88,2360

backend/storage/file/fd.c,59
FileSeek(File file, long offset, int whence){FileSeek2,5

backend/storage/sinval.h,31
#define SIGVAL_HSIGVAL_H2,17

backend/storage/buf_internals.h,686
#define BUF_INTERNALS_HBUF_INTERNALS_H2,24
typedef bits16          BufFlags;BufFlags7,124
struct sbufdesc {sbufdesc8,158
  SHMEM_OFFSET data;data9,176
  BufFlags     flags;flags10,197
  unsigned     refcount;refcount11,219
  int16        bufsmgr;bufsmgr12,244
#define BM_DIRTY BM_DIRTY15,273
#define BM_FREE BM_FREE16,308
#define BM_IO_IN_PROGRESS BM_IO_IN_PROGRESS17,343
#define BM_IO_ERROR BM_IO_ERROR18,378
typedef struct sbufdesc BufferDesc;BufferDesc20,414
typedef struct buftag   BufferTag;BufferTag21,450
#define BAD_BUFFER_ID(BAD_BUFFER_ID25,508
struct buftag {buftag27,567
  LRelId      relId;relId28,583
  BlockNumber blockNum;blockNum29,604

backend/storage/bufmgr.h,91
#define BUFMGR_HBUFMGR_H2,17
#define P_NEW P_NEW7,106
typedef void *Block;Block9,140

backend/storage/ipc.h,555
#define IPC_HIPC_H2,14
typedef int IpcSemaphoreId;IpcSemaphoreId6,45
typedef unsigned char slock_t;slock_t8,74
typedef struct slock{slock10,106
  slock_t       locklock;locklock11,128
  unsigned char flag;flag12,154
  short         nshlocks;nshlocks13,176
  slock_t       shlock;shlock14,202
  slock_t       exlock;exlock15,226
  slock_t       comlock;comlock16,250
  struct slock  *next;next17,275
} SLock;SLock18,298
#define NOLOCK NOLOCK20,308
#define SHAREDLOCK SHAREDLOCK21,332
#define EXCLUSIVELOCK EXCLUSIVELOCK22,356

backend/storage/multilev.h,69
#define MULTILEV_HMULTILEV_H2,19
#define READ_LOCK READ_LOCK4,39

backend/storage/ipc/sinval.c,134
SPINLOCK SInvalLock = (SPINLOCK)NULL;SInvalLock6,108
InvalidateSharedInvalid(void (*invalFunction)(),InvalidateSharedInvalid9,152

backend/storage/ipc/ipc.c,94
static SLock *SLockArray = NULL;SLockArray3,26
ExclusiveLock(int lockid)ExclusiveLock6,65

backend/storage/ipc/shmem.c,43
unsigned long ShmemBase = 0;ShmemBase1,0

backend/storage/ipc/spin.c,90
SpinAcquire(SPINLOCK lock)SpinAcquire5,57
SpinRelease(SPINLOCK lock)SpinRelease12,144

backend/storage/ipc/sinvaladt.c,161
SISeg *shmInvalBuffer;shmInvalBuffer3,32
SIReadEntryData(SISeg *segP,SIReadEntryData7,62
SIDelExpiredDataEntries(SISeg *segP)SIDelExpiredDataEntries16,219

backend/storage/ipc/s_lock.c,101
tas(slock_t *m)tas4,30
S_LOCK(slock_t *lock)S_LOCK12,140
S_UNLOCK(slock_t *lock)S_UNLOCK19,197

backend/storage/smgr/smgr.c,802
typedef struct f_smgr {f_smgr6,96
  int (*smgr_init)();smgr_init7,120
  int (*smgr_shutdown)();smgr_shutdown8,142
  int (*smgr_create)();smgr_create9,168
  int (*smgr_unlink)();smgr_unlink10,192
  int (*smgr_extend)();smgr_extend11,216
  int (*smgr_open)();smgr_open12,240
  int (*smgr_close)();smgr_close13,262
  int (*smgr_read)();smgr_read14,285
  int (*smgr_write)();smgr_write15,307
  int (*smgr_fulsh)();smgr_fulsh16,330
  int (*smgr_blindwrt)();smgr_blindwrt17,353
  int (*smgr_nblocks)();smgr_nblocks18,379
  int (*smgr_commit)();smgr_commit19,404
  int (*smgr_abort)();smgr_abort20,428
} f_smgr;f_smgr21,451
static f_smgr smgrsw[] = {smgrsw23,462
smgrcreate(int16 which, Relation reln){smgrcreate29,643
smgropen(int16 which, Relation reln){smgropen39,854

backend/storage/smgr/md.c,1370
typedef struct _MdfdVec {_MdfdVec12,236
  int             mdfd_vfd;mdfd_vfd13,262
  uint16          mdfd_flags;mdfd_flags14,290
  int             mdfd_lstbcnt;mdfd_lstbcnt15,320
  struct _MdfdVec *mdfd_chain;mdfd_chain16,352
} MdfdVec;MdfdVec17,383
#define RELSEG_SIZE RELSEG_SIZE19,395
#define MDFD_DIRTY MDFD_DIRTY20,422
static MdfdVec       *Md_fdvec = (MdfdVec *)NULL;Md_fdvec22,457
static MemoryContext MdCxt;MdCxt23,507
static int           Nfds  = 100;Nfds24,535
static int           CurFd = 0;CurFd25,569
mdinit(){mdinit33,841
mdcreate(Relation reln){mdcreate53,1265
mdunlink(Relation reln){mdunlink88,2008
mdextend(Relation reln, char *buffer){mdextend125,2829
mdopen(Relation reln){mdopen147,3306
mdclose(Relation reln){mdclose174,3850
mdread(Relation reln, BlockNumber blocknum, char *buffer){mdread191,4165
mdwrite(Relation reln, BlockNumber blocknum, char *buffer){mdwrite216,4688
mdflush(Relation    reln,mdflush238,5141
mdblindwrt(char       *dbstr,mdblindwrt263,5653
mdnblocks(Relation reln){mdnblocks319,7019
mdcommit(){mdcommit350,7749
mdabort(){mdabort368,8054
_fdvec_ext(){_fdvec_ext381,8253
_mdfd_openseg(Relation reln, int segno, int oflags){_mdfd_openseg400,8647
_mdfd_getseg(Relation reln, int blkno, int oflag){_mdfd_getseg437,9486
_mdnblocks(File file, Size blcksz){_mdnblocks465,10169

backend/storage/smgr/sgmr.c,55
smgrcreate(int16 which, Relation reln){smgrcreate2,4

backend/storage/buffer/bufmgr.c,347
ReadBuffer(Relation reln, BlockNumber blockNum){ReadBuffer18,452
BufferIsValid(Buffer bufnum){BufferIsValid23,567
BufferGetBlock(Buffer buffer){BufferGetBlock33,801
ReleaseBuffer(Buffer buffer){ReleaseBuffer43,1042
WriteBuffer(Buffer buffer){WriteBuffer73,1688
ReadBufferWithBufferLock(Relation    reln,ReadBufferWithBufferLock97,2164

backend/storage/buffer/buf_init.c,380
long       *PrivateRefCount;PrivateRefCount4,59
BufferDesc *BufferDescriptors;BufferDescriptors5,88
long       *LastRefCount;LastRefCount6,119
SPINLOCK   BufMgrLock;BufMgrLock7,145
int        lateWrite = TRUE;lateWrite8,168
int        NBuffers  = NDBUFS;NBuffers9,197
int        ReadBufferCount;ReadBufferCount11,229
int        BufferHitCount;BufferHitCount12,257

backend/storage/buffer/localbuf.c,191
int NLocBuffer                     = 64;NLocBuffer2,35
BufferDesc *LocalBufferDescriptors = NULL;LocalBufferDescriptors3,76
long *LocalRefCount                = NULL;LocalRefCount4,119

backend/storage/off.h,72
#define OFF_HOFF_H2,14
typedef uint16 OffsetNumber;OffsetNumber4,29

backend/storage/lmgr.h,453
#define LMGR_HLMGR_H2,15
typedef struct LRelId {LRelId8,133
  Oid relId;relId9,157
  Oid dbId;dbId10,170
} LRelId;LRelId11,182
typedef struct LockInfoData {LockInfoData13,193
  bool          initialized;initialized14,223
  LRelId        lRelId;lRelId15,252
  TransactionId transactionIdData;transactionIdData16,276
  uint16        flags;flags17,311
} LockInfoData;LockInfoData18,334
typedef LockInfoData *LockInfo;LockInfo19,350

backend/storage/buf.h,185
#define BUF_HBUF_H2,14
#define UnknownBuffer UnknownBuffer4,29
#define InvalidBuffer InvalidBuffer5,60
typedef long Buffer;Buffer7,87
#define BufferIsLocal(BufferIsLocal9,109

backend/storage/spin.h,63
#define SPIN_HSPIN_H2,15
typedef int SPINLOCK;SPINLOCK3,30

backend/storage/sinvaladt.h,818
#define SINVALADT_HSINVALADT_H2,20
#define MaxBackendId MaxBackendId7,89
typedef struct ProcState{ProcState9,115
  int  limit;limit10,141
  bool resetState;resetState11,155
  int  tag;tag12,174
} ProcState;ProcState13,186
typedef struct SISeg{SISeg15,200
  IpcSemaphoreId criticalSectionSemaphoreId;criticalSectionSemaphoreId16,222
  IpcSemaphoreId generalSemaphoreId;generalSemaphoreId17,267
  Offset         startEntrySection;startEntrySection18,304
  Offset         endEntrySection;endEntrySection19,340
  Offset         startFreeSpace;startFreeSpace20,374
  Offset         startEntryChain;startEntryChain21,407
  Offset         endEntryChain;endEntryChain22,441
  int            numEntries;numEntries23,473
  int            maxNumEntries;maxNumEntries24,502
} SISeg;SISeg26,580

backend/storage/backendid.h,77
#define BACKENDID_HBACKENDID_H2,20
typedef int16 BackendId;BackendId4,41

backend/storage/fd.h,51
#define FD_HFD_H2,13
typedef int File;File6,69

backend/storage/shmem.h,116
#define SHMEM_HSHMEM_H2,16
typedef unsigned long SHMEM_OFFSET;SHMEM_OFFSET5,59
#define MAKE_PTR(MAKE_PTR8,127

backend/storage/smgr.h,133
#define SMGR_HSMGR_H2,15
#define SM_FAIL SM_FAIL6,55
#define SM_SUCCESS SM_SUCCESS7,76
#define DEFAULT_SMGR DEFAULT_SMGR9,98

backend/storage/block.h,264
#define BLOCK_HBLOCK_H2,16
typedef uint32 BlockNumber;BlockNumber5,48
#define InvalidBlockNumber InvalidBlockNumber7,77
typedef struct BlockIdData{BlockIdData9,130
  uint16 bi_hi;bi_hi10,158
  uint16 bi_lo;bi_lo11,174
} BlockIdData;BlockIdData12,190
